program(1.0)
[buildInfo = dict<tensor<string, []>, tensor<string, []>>({{"coremlc-component-MIL", "3405.2.1"}, {"coremlc-version", "3404.23.1"}, {"coremltools-component-torch", "2.5.0"}, {"coremltools-source-dialect", "TorchScript"}, {"coremltools-version", "8.3.0"}})]
{
    func main<ios15>(tensor<fp32, [1, 3, 224, 224]> input) {
            tensor<string, []> input_1_pad_type_0 = const()[name = tensor<string, []>("input_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_1_pad_0 = const()[name = tensor<string, []>("input_1_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_1_strides_0 = const()[name = tensor<string, []>("input_1_strides_0"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> input_1_dilations_0 = const()[name = tensor<string, []>("input_1_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_1_groups_0 = const()[name = tensor<string, []>("input_1_groups_0"), val = tensor<int32, []>(1)];
            tensor<string, []> input_to_fp16_dtype_0 = const()[name = tensor<string, []>("input_to_fp16_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<fp16, [16, 3, 3, 3]> const_0_to_fp16 = const()[name = tensor<string, []>("const_0_to_fp16"), val = tensor<fp16, [16, 3, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64)))];
            tensor<fp16, [16]> const_1_to_fp16 = const()[name = tensor<string, []>("const_1_to_fp16"), val = tensor<fp16, [16]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1024)))];
            tensor<fp16, [1, 3, 224, 224]> input_to_fp16 = cast(dtype = input_to_fp16_dtype_0, x = input)[name = tensor<string, []>("cast_2")];
            tensor<fp16, [1, 16, 112, 112]> input_3_cast_fp16 = conv(bias = const_1_to_fp16, dilations = input_1_dilations_0, groups = input_1_groups_0, pad = input_1_pad_0, pad_type = input_1_pad_type_0, strides = input_1_strides_0, weight = const_0_to_fp16, x = input_to_fp16)[name = tensor<string, []>("input_3_cast_fp16")];
            tensor<fp16, []> thresholded_relu_0_alpha_0_to_fp16 = const()[name = tensor<string, []>("thresholded_relu_0_alpha_0_to_fp16"), val = tensor<fp16, []>(-0x1.8p+1)];
            tensor<fp16, [1, 16, 112, 112]> thresholded_relu_0_cast_fp16 = thresholded_relu(alpha = thresholded_relu_0_alpha_0_to_fp16, x = input_3_cast_fp16)[name = tensor<string, []>("thresholded_relu_0_cast_fp16")];
            tensor<fp16, []> sigmoid_hard_0_alpha_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_0_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> sigmoid_hard_0_beta_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_0_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 16, 112, 112]> sigmoid_hard_0_cast_fp16 = sigmoid_hard(alpha = sigmoid_hard_0_alpha_0_to_fp16, beta = sigmoid_hard_0_beta_0_to_fp16, x = thresholded_relu_0_cast_fp16)[name = tensor<string, []>("sigmoid_hard_0_cast_fp16")];
            tensor<fp16, [1, 16, 112, 112]> input_5_cast_fp16 = mul(x = thresholded_relu_0_cast_fp16, y = sigmoid_hard_0_cast_fp16)[name = tensor<string, []>("input_5_cast_fp16")];
            tensor<string, []> input_7_pad_type_0 = const()[name = tensor<string, []>("input_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_7_pad_0 = const()[name = tensor<string, []>("input_7_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, []> input_7_groups_0 = const()[name = tensor<string, []>("input_7_groups_0"), val = tensor<int32, []>(16)];
            tensor<int32, [2]> input_7_strides_0 = const()[name = tensor<string, []>("input_7_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_7_dilations_0 = const()[name = tensor<string, []>("input_7_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<fp16, [16, 1, 3, 3]> const_2_to_fp16 = const()[name = tensor<string, []>("const_2_to_fp16"), val = tensor<fp16, [16, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1152)))];
            tensor<fp16, [16]> const_3_to_fp16 = const()[name = tensor<string, []>("const_3_to_fp16"), val = tensor<fp16, [16]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1536)))];
            tensor<fp16, [1, 16, 112, 112]> input_9_cast_fp16 = conv(bias = const_3_to_fp16, dilations = input_7_dilations_0, groups = input_7_groups_0, pad = input_7_pad_0, pad_type = input_7_pad_type_0, strides = input_7_strides_0, weight = const_2_to_fp16, x = input_5_cast_fp16)[name = tensor<string, []>("input_9_cast_fp16")];
            tensor<fp16, [1, 16, 112, 112]> input_11_cast_fp16 = relu(x = input_9_cast_fp16)[name = tensor<string, []>("input_11_cast_fp16")];
            tensor<string, []> input_13_pad_type_0 = const()[name = tensor<string, []>("input_13_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_13_strides_0 = const()[name = tensor<string, []>("input_13_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_13_pad_0 = const()[name = tensor<string, []>("input_13_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_13_dilations_0 = const()[name = tensor<string, []>("input_13_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_13_groups_0 = const()[name = tensor<string, []>("input_13_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [16, 16, 1, 1]> const_4_to_fp16 = const()[name = tensor<string, []>("const_4_to_fp16"), val = tensor<fp16, [16, 16, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1664)))];
            tensor<fp16, [16]> const_5_to_fp16 = const()[name = tensor<string, []>("const_5_to_fp16"), val = tensor<fp16, [16]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2240)))];
            tensor<fp16, [1, 16, 112, 112]> result_1_cast_fp16 = conv(bias = const_5_to_fp16, dilations = input_13_dilations_0, groups = input_13_groups_0, pad = input_13_pad_0, pad_type = input_13_pad_type_0, strides = input_13_strides_0, weight = const_4_to_fp16, x = input_11_cast_fp16)[name = tensor<string, []>("result_1_cast_fp16")];
            tensor<fp16, [1, 16, 112, 112]> input_15_cast_fp16 = add(x = result_1_cast_fp16, y = input_5_cast_fp16)[name = tensor<string, []>("input_15_cast_fp16")];
            tensor<string, []> input_17_pad_type_0 = const()[name = tensor<string, []>("input_17_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_17_strides_0 = const()[name = tensor<string, []>("input_17_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_17_pad_0 = const()[name = tensor<string, []>("input_17_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_17_dilations_0 = const()[name = tensor<string, []>("input_17_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_17_groups_0 = const()[name = tensor<string, []>("input_17_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 16, 1, 1]> const_6_to_fp16 = const()[name = tensor<string, []>("const_6_to_fp16"), val = tensor<fp16, [64, 16, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2368)))];
            tensor<fp16, [64]> const_7_to_fp16 = const()[name = tensor<string, []>("const_7_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4480)))];
            tensor<fp16, [1, 64, 112, 112]> input_19_cast_fp16 = conv(bias = const_7_to_fp16, dilations = input_17_dilations_0, groups = input_17_groups_0, pad = input_17_pad_0, pad_type = input_17_pad_type_0, strides = input_17_strides_0, weight = const_6_to_fp16, x = input_15_cast_fp16)[name = tensor<string, []>("input_19_cast_fp16")];
            tensor<fp16, [1, 64, 112, 112]> input_21_cast_fp16 = relu(x = input_19_cast_fp16)[name = tensor<string, []>("input_21_cast_fp16")];
            tensor<string, []> input_23_pad_type_0 = const()[name = tensor<string, []>("input_23_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_23_pad_0 = const()[name = tensor<string, []>("input_23_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_23_strides_0 = const()[name = tensor<string, []>("input_23_strides_0"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, []> input_23_groups_0 = const()[name = tensor<string, []>("input_23_groups_0"), val = tensor<int32, []>(64)];
            tensor<int32, [2]> input_23_dilations_0 = const()[name = tensor<string, []>("input_23_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<fp16, [64, 1, 3, 3]> const_8_to_fp16 = const()[name = tensor<string, []>("const_8_to_fp16"), val = tensor<fp16, [64, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4672)))];
            tensor<fp16, [64]> const_9_to_fp16 = const()[name = tensor<string, []>("const_9_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5888)))];
            tensor<fp16, [1, 64, 56, 56]> input_25_cast_fp16 = conv(bias = const_9_to_fp16, dilations = input_23_dilations_0, groups = input_23_groups_0, pad = input_23_pad_0, pad_type = input_23_pad_type_0, strides = input_23_strides_0, weight = const_8_to_fp16, x = input_21_cast_fp16)[name = tensor<string, []>("input_25_cast_fp16")];
            tensor<fp16, [1, 64, 56, 56]> input_27_cast_fp16 = relu(x = input_25_cast_fp16)[name = tensor<string, []>("input_27_cast_fp16")];
            tensor<string, []> input_29_pad_type_0 = const()[name = tensor<string, []>("input_29_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_29_strides_0 = const()[name = tensor<string, []>("input_29_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_29_pad_0 = const()[name = tensor<string, []>("input_29_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_29_dilations_0 = const()[name = tensor<string, []>("input_29_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_29_groups_0 = const()[name = tensor<string, []>("input_29_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [24, 64, 1, 1]> const_10_to_fp16 = const()[name = tensor<string, []>("const_10_to_fp16"), val = tensor<fp16, [24, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6080)))];
            tensor<fp16, [24]> const_11_to_fp16 = const()[name = tensor<string, []>("const_11_to_fp16"), val = tensor<fp16, [24]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9216)))];
            tensor<fp16, [1, 24, 56, 56]> input_31_cast_fp16 = conv(bias = const_11_to_fp16, dilations = input_29_dilations_0, groups = input_29_groups_0, pad = input_29_pad_0, pad_type = input_29_pad_type_0, strides = input_29_strides_0, weight = const_10_to_fp16, x = input_27_cast_fp16)[name = tensor<string, []>("input_31_cast_fp16")];
            tensor<string, []> input_33_pad_type_0 = const()[name = tensor<string, []>("input_33_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_33_strides_0 = const()[name = tensor<string, []>("input_33_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_33_pad_0 = const()[name = tensor<string, []>("input_33_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_33_dilations_0 = const()[name = tensor<string, []>("input_33_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_33_groups_0 = const()[name = tensor<string, []>("input_33_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [72, 24, 1, 1]> const_12_to_fp16 = const()[name = tensor<string, []>("const_12_to_fp16"), val = tensor<fp16, [72, 24, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9344)))];
            tensor<fp16, [72]> const_13_to_fp16 = const()[name = tensor<string, []>("const_13_to_fp16"), val = tensor<fp16, [72]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12864)))];
            tensor<fp16, [1, 72, 56, 56]> input_35_cast_fp16 = conv(bias = const_13_to_fp16, dilations = input_33_dilations_0, groups = input_33_groups_0, pad = input_33_pad_0, pad_type = input_33_pad_type_0, strides = input_33_strides_0, weight = const_12_to_fp16, x = input_31_cast_fp16)[name = tensor<string, []>("input_35_cast_fp16")];
            tensor<fp16, [1, 72, 56, 56]> input_37_cast_fp16 = relu(x = input_35_cast_fp16)[name = tensor<string, []>("input_37_cast_fp16")];
            tensor<string, []> input_39_pad_type_0 = const()[name = tensor<string, []>("input_39_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_39_pad_0 = const()[name = tensor<string, []>("input_39_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, []> input_39_groups_0 = const()[name = tensor<string, []>("input_39_groups_0"), val = tensor<int32, []>(72)];
            tensor<int32, [2]> input_39_strides_0 = const()[name = tensor<string, []>("input_39_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_39_dilations_0 = const()[name = tensor<string, []>("input_39_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<fp16, [72, 1, 3, 3]> const_14_to_fp16 = const()[name = tensor<string, []>("const_14_to_fp16"), val = tensor<fp16, [72, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13120)))];
            tensor<fp16, [72]> const_15_to_fp16 = const()[name = tensor<string, []>("const_15_to_fp16"), val = tensor<fp16, [72]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14528)))];
            tensor<fp16, [1, 72, 56, 56]> input_41_cast_fp16 = conv(bias = const_15_to_fp16, dilations = input_39_dilations_0, groups = input_39_groups_0, pad = input_39_pad_0, pad_type = input_39_pad_type_0, strides = input_39_strides_0, weight = const_14_to_fp16, x = input_37_cast_fp16)[name = tensor<string, []>("input_41_cast_fp16")];
            tensor<fp16, [1, 72, 56, 56]> input_43_cast_fp16 = relu(x = input_41_cast_fp16)[name = tensor<string, []>("input_43_cast_fp16")];
            tensor<string, []> input_45_pad_type_0 = const()[name = tensor<string, []>("input_45_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_45_strides_0 = const()[name = tensor<string, []>("input_45_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_45_pad_0 = const()[name = tensor<string, []>("input_45_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_45_dilations_0 = const()[name = tensor<string, []>("input_45_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_45_groups_0 = const()[name = tensor<string, []>("input_45_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [24, 72, 1, 1]> const_16_to_fp16 = const()[name = tensor<string, []>("const_16_to_fp16"), val = tensor<fp16, [24, 72, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14784)))];
            tensor<fp16, [24]> const_17_to_fp16 = const()[name = tensor<string, []>("const_17_to_fp16"), val = tensor<fp16, [24]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18304)))];
            tensor<fp16, [1, 24, 56, 56]> result_3_cast_fp16 = conv(bias = const_17_to_fp16, dilations = input_45_dilations_0, groups = input_45_groups_0, pad = input_45_pad_0, pad_type = input_45_pad_type_0, strides = input_45_strides_0, weight = const_16_to_fp16, x = input_43_cast_fp16)[name = tensor<string, []>("result_3_cast_fp16")];
            tensor<fp16, [1, 24, 56, 56]> input_47_cast_fp16 = add(x = result_3_cast_fp16, y = input_31_cast_fp16)[name = tensor<string, []>("input_47_cast_fp16")];
            tensor<string, []> input_49_pad_type_0 = const()[name = tensor<string, []>("input_49_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_49_strides_0 = const()[name = tensor<string, []>("input_49_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_49_pad_0 = const()[name = tensor<string, []>("input_49_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_49_dilations_0 = const()[name = tensor<string, []>("input_49_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_49_groups_0 = const()[name = tensor<string, []>("input_49_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [72, 24, 1, 1]> const_18_to_fp16 = const()[name = tensor<string, []>("const_18_to_fp16"), val = tensor<fp16, [72, 24, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18432)))];
            tensor<fp16, [72]> const_19_to_fp16 = const()[name = tensor<string, []>("const_19_to_fp16"), val = tensor<fp16, [72]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(21952)))];
            tensor<fp16, [1, 72, 56, 56]> input_51_cast_fp16 = conv(bias = const_19_to_fp16, dilations = input_49_dilations_0, groups = input_49_groups_0, pad = input_49_pad_0, pad_type = input_49_pad_type_0, strides = input_49_strides_0, weight = const_18_to_fp16, x = input_47_cast_fp16)[name = tensor<string, []>("input_51_cast_fp16")];
            tensor<fp16, [1, 72, 56, 56]> input_53_cast_fp16 = relu(x = input_51_cast_fp16)[name = tensor<string, []>("input_53_cast_fp16")];
            tensor<string, []> input_55_pad_type_0 = const()[name = tensor<string, []>("input_55_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_55_pad_0 = const()[name = tensor<string, []>("input_55_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<int32, [2]> input_55_strides_0 = const()[name = tensor<string, []>("input_55_strides_0"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, []> input_55_groups_0 = const()[name = tensor<string, []>("input_55_groups_0"), val = tensor<int32, []>(72)];
            tensor<int32, [2]> input_55_dilations_0 = const()[name = tensor<string, []>("input_55_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<fp16, [72, 1, 5, 5]> const_20_to_fp16 = const()[name = tensor<string, []>("const_20_to_fp16"), val = tensor<fp16, [72, 1, 5, 5]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(22208)))];
            tensor<fp16, [72]> const_21_to_fp16 = const()[name = tensor<string, []>("const_21_to_fp16"), val = tensor<fp16, [72]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25920)))];
            tensor<fp16, [1, 72, 28, 28]> input_57_cast_fp16 = conv(bias = const_21_to_fp16, dilations = input_55_dilations_0, groups = input_55_groups_0, pad = input_55_pad_0, pad_type = input_55_pad_type_0, strides = input_55_strides_0, weight = const_20_to_fp16, x = input_53_cast_fp16)[name = tensor<string, []>("input_57_cast_fp16")];
            tensor<fp16, [1, 72, 28, 28]> input_59_cast_fp16 = relu(x = input_57_cast_fp16)[name = tensor<string, []>("input_59_cast_fp16")];
            tensor<int32, [2]> input_61_axes_0 = const()[name = tensor<string, []>("input_61_axes_0"), val = tensor<int32, [2]>([-2, -1])];
            tensor<bool, []> input_61_keep_dims_0 = const()[name = tensor<string, []>("input_61_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 72, 1, 1]> input_61_cast_fp16 = reduce_mean(axes = input_61_axes_0, keep_dims = input_61_keep_dims_0, x = input_59_cast_fp16)[name = tensor<string, []>("input_61_cast_fp16")];
            tensor<string, []> input_63_pad_type_0 = const()[name = tensor<string, []>("input_63_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_63_strides_0 = const()[name = tensor<string, []>("input_63_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_63_pad_0 = const()[name = tensor<string, []>("input_63_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_63_dilations_0 = const()[name = tensor<string, []>("input_63_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_63_groups_0 = const()[name = tensor<string, []>("input_63_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [24, 72, 1, 1]> features_4_block_2_fc1_weight_to_fp16 = const()[name = tensor<string, []>("features_4_block_2_fc1_weight_to_fp16"), val = tensor<fp16, [24, 72, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(26176)))];
            tensor<fp16, [24]> features_4_block_2_fc1_bias_to_fp16 = const()[name = tensor<string, []>("features_4_block_2_fc1_bias_to_fp16"), val = tensor<fp16, [24]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(29696)))];
            tensor<fp16, [1, 24, 1, 1]> input_63_cast_fp16 = conv(bias = features_4_block_2_fc1_bias_to_fp16, dilations = input_63_dilations_0, groups = input_63_groups_0, pad = input_63_pad_0, pad_type = input_63_pad_type_0, strides = input_63_strides_0, weight = features_4_block_2_fc1_weight_to_fp16, x = input_61_cast_fp16)[name = tensor<string, []>("input_63_cast_fp16")];
            tensor<fp16, [1, 24, 1, 1]> input_65_cast_fp16 = relu(x = input_63_cast_fp16)[name = tensor<string, []>("input_65_cast_fp16")];
            tensor<string, []> input_67_pad_type_0 = const()[name = tensor<string, []>("input_67_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_67_strides_0 = const()[name = tensor<string, []>("input_67_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_67_pad_0 = const()[name = tensor<string, []>("input_67_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_67_dilations_0 = const()[name = tensor<string, []>("input_67_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_67_groups_0 = const()[name = tensor<string, []>("input_67_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [72, 24, 1, 1]> features_4_block_2_fc2_weight_to_fp16 = const()[name = tensor<string, []>("features_4_block_2_fc2_weight_to_fp16"), val = tensor<fp16, [72, 24, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(29824)))];
            tensor<fp16, [72]> features_4_block_2_fc2_bias_to_fp16 = const()[name = tensor<string, []>("features_4_block_2_fc2_bias_to_fp16"), val = tensor<fp16, [72]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(33344)))];
            tensor<fp16, [1, 72, 1, 1]> input_67_cast_fp16 = conv(bias = features_4_block_2_fc2_bias_to_fp16, dilations = input_67_dilations_0, groups = input_67_groups_0, pad = input_67_pad_0, pad_type = input_67_pad_type_0, strides = input_67_strides_0, weight = features_4_block_2_fc2_weight_to_fp16, x = input_65_cast_fp16)[name = tensor<string, []>("input_67_cast_fp16")];
            tensor<fp16, []> scale_1_alpha_0_to_fp16 = const()[name = tensor<string, []>("scale_1_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> scale_1_beta_0_to_fp16 = const()[name = tensor<string, []>("scale_1_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 72, 1, 1]> scale_1_cast_fp16 = sigmoid_hard(alpha = scale_1_alpha_0_to_fp16, beta = scale_1_beta_0_to_fp16, x = input_67_cast_fp16)[name = tensor<string, []>("scale_1_cast_fp16")];
            tensor<fp16, [1, 72, 28, 28]> input_69_cast_fp16 = mul(x = scale_1_cast_fp16, y = input_59_cast_fp16)[name = tensor<string, []>("input_69_cast_fp16")];
            tensor<string, []> input_71_pad_type_0 = const()[name = tensor<string, []>("input_71_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_71_strides_0 = const()[name = tensor<string, []>("input_71_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_71_pad_0 = const()[name = tensor<string, []>("input_71_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_71_dilations_0 = const()[name = tensor<string, []>("input_71_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_71_groups_0 = const()[name = tensor<string, []>("input_71_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [40, 72, 1, 1]> const_22_to_fp16 = const()[name = tensor<string, []>("const_22_to_fp16"), val = tensor<fp16, [40, 72, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(33600)))];
            tensor<fp16, [40]> const_23_to_fp16 = const()[name = tensor<string, []>("const_23_to_fp16"), val = tensor<fp16, [40]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(39424)))];
            tensor<fp16, [1, 40, 28, 28]> input_73_cast_fp16 = conv(bias = const_23_to_fp16, dilations = input_71_dilations_0, groups = input_71_groups_0, pad = input_71_pad_0, pad_type = input_71_pad_type_0, strides = input_71_strides_0, weight = const_22_to_fp16, x = input_69_cast_fp16)[name = tensor<string, []>("input_73_cast_fp16")];
            tensor<string, []> input_75_pad_type_0 = const()[name = tensor<string, []>("input_75_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_75_strides_0 = const()[name = tensor<string, []>("input_75_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_75_pad_0 = const()[name = tensor<string, []>("input_75_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_75_dilations_0 = const()[name = tensor<string, []>("input_75_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_75_groups_0 = const()[name = tensor<string, []>("input_75_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [120, 40, 1, 1]> const_24_to_fp16 = const()[name = tensor<string, []>("const_24_to_fp16"), val = tensor<fp16, [120, 40, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(39616)))];
            tensor<fp16, [120]> const_25_to_fp16 = const()[name = tensor<string, []>("const_25_to_fp16"), val = tensor<fp16, [120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(49280)))];
            tensor<fp16, [1, 120, 28, 28]> input_77_cast_fp16 = conv(bias = const_25_to_fp16, dilations = input_75_dilations_0, groups = input_75_groups_0, pad = input_75_pad_0, pad_type = input_75_pad_type_0, strides = input_75_strides_0, weight = const_24_to_fp16, x = input_73_cast_fp16)[name = tensor<string, []>("input_77_cast_fp16")];
            tensor<fp16, [1, 120, 28, 28]> input_79_cast_fp16 = relu(x = input_77_cast_fp16)[name = tensor<string, []>("input_79_cast_fp16")];
            tensor<string, []> input_81_pad_type_0 = const()[name = tensor<string, []>("input_81_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_81_pad_0 = const()[name = tensor<string, []>("input_81_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<int32, []> input_81_groups_0 = const()[name = tensor<string, []>("input_81_groups_0"), val = tensor<int32, []>(120)];
            tensor<int32, [2]> input_81_strides_0 = const()[name = tensor<string, []>("input_81_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_81_dilations_0 = const()[name = tensor<string, []>("input_81_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<fp16, [120, 1, 5, 5]> const_26_to_fp16 = const()[name = tensor<string, []>("const_26_to_fp16"), val = tensor<fp16, [120, 1, 5, 5]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(49600)))];
            tensor<fp16, [120]> const_27_to_fp16 = const()[name = tensor<string, []>("const_27_to_fp16"), val = tensor<fp16, [120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(55680)))];
            tensor<fp16, [1, 120, 28, 28]> input_83_cast_fp16 = conv(bias = const_27_to_fp16, dilations = input_81_dilations_0, groups = input_81_groups_0, pad = input_81_pad_0, pad_type = input_81_pad_type_0, strides = input_81_strides_0, weight = const_26_to_fp16, x = input_79_cast_fp16)[name = tensor<string, []>("input_83_cast_fp16")];
            tensor<fp16, [1, 120, 28, 28]> input_85_cast_fp16 = relu(x = input_83_cast_fp16)[name = tensor<string, []>("input_85_cast_fp16")];
            tensor<int32, [2]> input_87_axes_0 = const()[name = tensor<string, []>("input_87_axes_0"), val = tensor<int32, [2]>([-2, -1])];
            tensor<bool, []> input_87_keep_dims_0 = const()[name = tensor<string, []>("input_87_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 120, 1, 1]> input_87_cast_fp16 = reduce_mean(axes = input_87_axes_0, keep_dims = input_87_keep_dims_0, x = input_85_cast_fp16)[name = tensor<string, []>("input_87_cast_fp16")];
            tensor<string, []> input_89_pad_type_0 = const()[name = tensor<string, []>("input_89_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_89_strides_0 = const()[name = tensor<string, []>("input_89_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_89_pad_0 = const()[name = tensor<string, []>("input_89_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_89_dilations_0 = const()[name = tensor<string, []>("input_89_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_89_groups_0 = const()[name = tensor<string, []>("input_89_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [32, 120, 1, 1]> features_5_block_2_fc1_weight_to_fp16 = const()[name = tensor<string, []>("features_5_block_2_fc1_weight_to_fp16"), val = tensor<fp16, [32, 120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(56000)))];
            tensor<fp16, [32]> features_5_block_2_fc1_bias_to_fp16 = const()[name = tensor<string, []>("features_5_block_2_fc1_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(63744)))];
            tensor<fp16, [1, 32, 1, 1]> input_89_cast_fp16 = conv(bias = features_5_block_2_fc1_bias_to_fp16, dilations = input_89_dilations_0, groups = input_89_groups_0, pad = input_89_pad_0, pad_type = input_89_pad_type_0, strides = input_89_strides_0, weight = features_5_block_2_fc1_weight_to_fp16, x = input_87_cast_fp16)[name = tensor<string, []>("input_89_cast_fp16")];
            tensor<fp16, [1, 32, 1, 1]> input_91_cast_fp16 = relu(x = input_89_cast_fp16)[name = tensor<string, []>("input_91_cast_fp16")];
            tensor<string, []> input_93_pad_type_0 = const()[name = tensor<string, []>("input_93_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_93_strides_0 = const()[name = tensor<string, []>("input_93_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_93_pad_0 = const()[name = tensor<string, []>("input_93_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_93_dilations_0 = const()[name = tensor<string, []>("input_93_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_93_groups_0 = const()[name = tensor<string, []>("input_93_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [120, 32, 1, 1]> features_5_block_2_fc2_weight_to_fp16 = const()[name = tensor<string, []>("features_5_block_2_fc2_weight_to_fp16"), val = tensor<fp16, [120, 32, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(63872)))];
            tensor<fp16, [120]> features_5_block_2_fc2_bias_to_fp16 = const()[name = tensor<string, []>("features_5_block_2_fc2_bias_to_fp16"), val = tensor<fp16, [120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(71616)))];
            tensor<fp16, [1, 120, 1, 1]> input_93_cast_fp16 = conv(bias = features_5_block_2_fc2_bias_to_fp16, dilations = input_93_dilations_0, groups = input_93_groups_0, pad = input_93_pad_0, pad_type = input_93_pad_type_0, strides = input_93_strides_0, weight = features_5_block_2_fc2_weight_to_fp16, x = input_91_cast_fp16)[name = tensor<string, []>("input_93_cast_fp16")];
            tensor<fp16, []> scale_3_alpha_0_to_fp16 = const()[name = tensor<string, []>("scale_3_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> scale_3_beta_0_to_fp16 = const()[name = tensor<string, []>("scale_3_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 120, 1, 1]> scale_3_cast_fp16 = sigmoid_hard(alpha = scale_3_alpha_0_to_fp16, beta = scale_3_beta_0_to_fp16, x = input_93_cast_fp16)[name = tensor<string, []>("scale_3_cast_fp16")];
            tensor<fp16, [1, 120, 28, 28]> input_95_cast_fp16 = mul(x = scale_3_cast_fp16, y = input_85_cast_fp16)[name = tensor<string, []>("input_95_cast_fp16")];
            tensor<string, []> input_97_pad_type_0 = const()[name = tensor<string, []>("input_97_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_97_strides_0 = const()[name = tensor<string, []>("input_97_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_97_pad_0 = const()[name = tensor<string, []>("input_97_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_97_dilations_0 = const()[name = tensor<string, []>("input_97_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_97_groups_0 = const()[name = tensor<string, []>("input_97_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [40, 120, 1, 1]> const_28_to_fp16 = const()[name = tensor<string, []>("const_28_to_fp16"), val = tensor<fp16, [40, 120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(71936)))];
            tensor<fp16, [40]> const_29_to_fp16 = const()[name = tensor<string, []>("const_29_to_fp16"), val = tensor<fp16, [40]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(81600)))];
            tensor<fp16, [1, 40, 28, 28]> result_5_cast_fp16 = conv(bias = const_29_to_fp16, dilations = input_97_dilations_0, groups = input_97_groups_0, pad = input_97_pad_0, pad_type = input_97_pad_type_0, strides = input_97_strides_0, weight = const_28_to_fp16, x = input_95_cast_fp16)[name = tensor<string, []>("result_5_cast_fp16")];
            tensor<fp16, [1, 40, 28, 28]> input_99_cast_fp16 = add(x = result_5_cast_fp16, y = input_73_cast_fp16)[name = tensor<string, []>("input_99_cast_fp16")];
            tensor<string, []> input_101_pad_type_0 = const()[name = tensor<string, []>("input_101_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_101_strides_0 = const()[name = tensor<string, []>("input_101_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_101_pad_0 = const()[name = tensor<string, []>("input_101_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_101_dilations_0 = const()[name = tensor<string, []>("input_101_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_101_groups_0 = const()[name = tensor<string, []>("input_101_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [120, 40, 1, 1]> const_30_to_fp16 = const()[name = tensor<string, []>("const_30_to_fp16"), val = tensor<fp16, [120, 40, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(81792)))];
            tensor<fp16, [120]> const_31_to_fp16 = const()[name = tensor<string, []>("const_31_to_fp16"), val = tensor<fp16, [120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(91456)))];
            tensor<fp16, [1, 120, 28, 28]> input_103_cast_fp16 = conv(bias = const_31_to_fp16, dilations = input_101_dilations_0, groups = input_101_groups_0, pad = input_101_pad_0, pad_type = input_101_pad_type_0, strides = input_101_strides_0, weight = const_30_to_fp16, x = input_99_cast_fp16)[name = tensor<string, []>("input_103_cast_fp16")];
            tensor<fp16, [1, 120, 28, 28]> input_105_cast_fp16 = relu(x = input_103_cast_fp16)[name = tensor<string, []>("input_105_cast_fp16")];
            tensor<string, []> input_107_pad_type_0 = const()[name = tensor<string, []>("input_107_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_107_pad_0 = const()[name = tensor<string, []>("input_107_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<int32, []> input_107_groups_0 = const()[name = tensor<string, []>("input_107_groups_0"), val = tensor<int32, []>(120)];
            tensor<int32, [2]> input_107_strides_0 = const()[name = tensor<string, []>("input_107_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_107_dilations_0 = const()[name = tensor<string, []>("input_107_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<fp16, [120, 1, 5, 5]> const_32_to_fp16 = const()[name = tensor<string, []>("const_32_to_fp16"), val = tensor<fp16, [120, 1, 5, 5]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(91776)))];
            tensor<fp16, [120]> const_33_to_fp16 = const()[name = tensor<string, []>("const_33_to_fp16"), val = tensor<fp16, [120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(97856)))];
            tensor<fp16, [1, 120, 28, 28]> input_109_cast_fp16 = conv(bias = const_33_to_fp16, dilations = input_107_dilations_0, groups = input_107_groups_0, pad = input_107_pad_0, pad_type = input_107_pad_type_0, strides = input_107_strides_0, weight = const_32_to_fp16, x = input_105_cast_fp16)[name = tensor<string, []>("input_109_cast_fp16")];
            tensor<fp16, [1, 120, 28, 28]> input_111_cast_fp16 = relu(x = input_109_cast_fp16)[name = tensor<string, []>("input_111_cast_fp16")];
            tensor<int32, [2]> input_113_axes_0 = const()[name = tensor<string, []>("input_113_axes_0"), val = tensor<int32, [2]>([-2, -1])];
            tensor<bool, []> input_113_keep_dims_0 = const()[name = tensor<string, []>("input_113_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 120, 1, 1]> input_113_cast_fp16 = reduce_mean(axes = input_113_axes_0, keep_dims = input_113_keep_dims_0, x = input_111_cast_fp16)[name = tensor<string, []>("input_113_cast_fp16")];
            tensor<string, []> input_115_pad_type_0 = const()[name = tensor<string, []>("input_115_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_115_strides_0 = const()[name = tensor<string, []>("input_115_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_115_pad_0 = const()[name = tensor<string, []>("input_115_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_115_dilations_0 = const()[name = tensor<string, []>("input_115_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_115_groups_0 = const()[name = tensor<string, []>("input_115_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [32, 120, 1, 1]> features_6_block_2_fc1_weight_to_fp16 = const()[name = tensor<string, []>("features_6_block_2_fc1_weight_to_fp16"), val = tensor<fp16, [32, 120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(98176)))];
            tensor<fp16, [32]> features_6_block_2_fc1_bias_to_fp16 = const()[name = tensor<string, []>("features_6_block_2_fc1_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(105920)))];
            tensor<fp16, [1, 32, 1, 1]> input_115_cast_fp16 = conv(bias = features_6_block_2_fc1_bias_to_fp16, dilations = input_115_dilations_0, groups = input_115_groups_0, pad = input_115_pad_0, pad_type = input_115_pad_type_0, strides = input_115_strides_0, weight = features_6_block_2_fc1_weight_to_fp16, x = input_113_cast_fp16)[name = tensor<string, []>("input_115_cast_fp16")];
            tensor<fp16, [1, 32, 1, 1]> input_117_cast_fp16 = relu(x = input_115_cast_fp16)[name = tensor<string, []>("input_117_cast_fp16")];
            tensor<string, []> input_119_pad_type_0 = const()[name = tensor<string, []>("input_119_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_119_strides_0 = const()[name = tensor<string, []>("input_119_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_119_pad_0 = const()[name = tensor<string, []>("input_119_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_119_dilations_0 = const()[name = tensor<string, []>("input_119_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_119_groups_0 = const()[name = tensor<string, []>("input_119_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [120, 32, 1, 1]> features_6_block_2_fc2_weight_to_fp16 = const()[name = tensor<string, []>("features_6_block_2_fc2_weight_to_fp16"), val = tensor<fp16, [120, 32, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(106048)))];
            tensor<fp16, [120]> features_6_block_2_fc2_bias_to_fp16 = const()[name = tensor<string, []>("features_6_block_2_fc2_bias_to_fp16"), val = tensor<fp16, [120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(113792)))];
            tensor<fp16, [1, 120, 1, 1]> input_119_cast_fp16 = conv(bias = features_6_block_2_fc2_bias_to_fp16, dilations = input_119_dilations_0, groups = input_119_groups_0, pad = input_119_pad_0, pad_type = input_119_pad_type_0, strides = input_119_strides_0, weight = features_6_block_2_fc2_weight_to_fp16, x = input_117_cast_fp16)[name = tensor<string, []>("input_119_cast_fp16")];
            tensor<fp16, []> scale_5_alpha_0_to_fp16 = const()[name = tensor<string, []>("scale_5_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> scale_5_beta_0_to_fp16 = const()[name = tensor<string, []>("scale_5_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 120, 1, 1]> scale_5_cast_fp16 = sigmoid_hard(alpha = scale_5_alpha_0_to_fp16, beta = scale_5_beta_0_to_fp16, x = input_119_cast_fp16)[name = tensor<string, []>("scale_5_cast_fp16")];
            tensor<fp16, [1, 120, 28, 28]> input_121_cast_fp16 = mul(x = scale_5_cast_fp16, y = input_111_cast_fp16)[name = tensor<string, []>("input_121_cast_fp16")];
            tensor<string, []> input_123_pad_type_0 = const()[name = tensor<string, []>("input_123_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_123_strides_0 = const()[name = tensor<string, []>("input_123_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_123_pad_0 = const()[name = tensor<string, []>("input_123_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_123_dilations_0 = const()[name = tensor<string, []>("input_123_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_123_groups_0 = const()[name = tensor<string, []>("input_123_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [40, 120, 1, 1]> const_34_to_fp16 = const()[name = tensor<string, []>("const_34_to_fp16"), val = tensor<fp16, [40, 120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(114112)))];
            tensor<fp16, [40]> const_35_to_fp16 = const()[name = tensor<string, []>("const_35_to_fp16"), val = tensor<fp16, [40]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(123776)))];
            tensor<fp16, [1, 40, 28, 28]> result_7_cast_fp16 = conv(bias = const_35_to_fp16, dilations = input_123_dilations_0, groups = input_123_groups_0, pad = input_123_pad_0, pad_type = input_123_pad_type_0, strides = input_123_strides_0, weight = const_34_to_fp16, x = input_121_cast_fp16)[name = tensor<string, []>("result_7_cast_fp16")];
            tensor<fp16, [1, 40, 28, 28]> input_125_cast_fp16 = add(x = result_7_cast_fp16, y = input_99_cast_fp16)[name = tensor<string, []>("input_125_cast_fp16")];
            tensor<string, []> input_127_pad_type_0 = const()[name = tensor<string, []>("input_127_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_127_strides_0 = const()[name = tensor<string, []>("input_127_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_127_pad_0 = const()[name = tensor<string, []>("input_127_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_127_dilations_0 = const()[name = tensor<string, []>("input_127_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_127_groups_0 = const()[name = tensor<string, []>("input_127_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [240, 40, 1, 1]> const_36_to_fp16 = const()[name = tensor<string, []>("const_36_to_fp16"), val = tensor<fp16, [240, 40, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(123968)))];
            tensor<fp16, [240]> const_37_to_fp16 = const()[name = tensor<string, []>("const_37_to_fp16"), val = tensor<fp16, [240]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(143232)))];
            tensor<fp16, [1, 240, 28, 28]> input_129_cast_fp16 = conv(bias = const_37_to_fp16, dilations = input_127_dilations_0, groups = input_127_groups_0, pad = input_127_pad_0, pad_type = input_127_pad_type_0, strides = input_127_strides_0, weight = const_36_to_fp16, x = input_125_cast_fp16)[name = tensor<string, []>("input_129_cast_fp16")];
            tensor<fp16, []> thresholded_relu_1_alpha_0_to_fp16 = const()[name = tensor<string, []>("thresholded_relu_1_alpha_0_to_fp16"), val = tensor<fp16, []>(-0x1.8p+1)];
            tensor<fp16, [1, 240, 28, 28]> thresholded_relu_1_cast_fp16 = thresholded_relu(alpha = thresholded_relu_1_alpha_0_to_fp16, x = input_129_cast_fp16)[name = tensor<string, []>("thresholded_relu_1_cast_fp16")];
            tensor<fp16, []> sigmoid_hard_1_alpha_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_1_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> sigmoid_hard_1_beta_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_1_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 240, 28, 28]> sigmoid_hard_1_cast_fp16 = sigmoid_hard(alpha = sigmoid_hard_1_alpha_0_to_fp16, beta = sigmoid_hard_1_beta_0_to_fp16, x = thresholded_relu_1_cast_fp16)[name = tensor<string, []>("sigmoid_hard_1_cast_fp16")];
            tensor<fp16, [1, 240, 28, 28]> input_131_cast_fp16 = mul(x = thresholded_relu_1_cast_fp16, y = sigmoid_hard_1_cast_fp16)[name = tensor<string, []>("input_131_cast_fp16")];
            tensor<string, []> input_133_pad_type_0 = const()[name = tensor<string, []>("input_133_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_133_pad_0 = const()[name = tensor<string, []>("input_133_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_133_strides_0 = const()[name = tensor<string, []>("input_133_strides_0"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, []> input_133_groups_0 = const()[name = tensor<string, []>("input_133_groups_0"), val = tensor<int32, []>(240)];
            tensor<int32, [2]> input_133_dilations_0 = const()[name = tensor<string, []>("input_133_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<fp16, [240, 1, 3, 3]> const_38_to_fp16 = const()[name = tensor<string, []>("const_38_to_fp16"), val = tensor<fp16, [240, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(143808)))];
            tensor<fp16, [240]> const_39_to_fp16 = const()[name = tensor<string, []>("const_39_to_fp16"), val = tensor<fp16, [240]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(148224)))];
            tensor<fp16, [1, 240, 14, 14]> input_135_cast_fp16 = conv(bias = const_39_to_fp16, dilations = input_133_dilations_0, groups = input_133_groups_0, pad = input_133_pad_0, pad_type = input_133_pad_type_0, strides = input_133_strides_0, weight = const_38_to_fp16, x = input_131_cast_fp16)[name = tensor<string, []>("input_135_cast_fp16")];
            tensor<fp16, []> thresholded_relu_2_alpha_0_to_fp16 = const()[name = tensor<string, []>("thresholded_relu_2_alpha_0_to_fp16"), val = tensor<fp16, []>(-0x1.8p+1)];
            tensor<fp16, [1, 240, 14, 14]> thresholded_relu_2_cast_fp16 = thresholded_relu(alpha = thresholded_relu_2_alpha_0_to_fp16, x = input_135_cast_fp16)[name = tensor<string, []>("thresholded_relu_2_cast_fp16")];
            tensor<fp16, []> sigmoid_hard_2_alpha_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_2_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> sigmoid_hard_2_beta_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_2_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 240, 14, 14]> sigmoid_hard_2_cast_fp16 = sigmoid_hard(alpha = sigmoid_hard_2_alpha_0_to_fp16, beta = sigmoid_hard_2_beta_0_to_fp16, x = thresholded_relu_2_cast_fp16)[name = tensor<string, []>("sigmoid_hard_2_cast_fp16")];
            tensor<fp16, [1, 240, 14, 14]> input_137_cast_fp16 = mul(x = thresholded_relu_2_cast_fp16, y = sigmoid_hard_2_cast_fp16)[name = tensor<string, []>("input_137_cast_fp16")];
            tensor<string, []> input_139_pad_type_0 = const()[name = tensor<string, []>("input_139_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_139_strides_0 = const()[name = tensor<string, []>("input_139_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_139_pad_0 = const()[name = tensor<string, []>("input_139_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_139_dilations_0 = const()[name = tensor<string, []>("input_139_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_139_groups_0 = const()[name = tensor<string, []>("input_139_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [80, 240, 1, 1]> const_40_to_fp16 = const()[name = tensor<string, []>("const_40_to_fp16"), val = tensor<fp16, [80, 240, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(148800)))];
            tensor<fp16, [80]> const_41_to_fp16 = const()[name = tensor<string, []>("const_41_to_fp16"), val = tensor<fp16, [80]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(187264)))];
            tensor<fp16, [1, 80, 14, 14]> input_141_cast_fp16 = conv(bias = const_41_to_fp16, dilations = input_139_dilations_0, groups = input_139_groups_0, pad = input_139_pad_0, pad_type = input_139_pad_type_0, strides = input_139_strides_0, weight = const_40_to_fp16, x = input_137_cast_fp16)[name = tensor<string, []>("input_141_cast_fp16")];
            tensor<string, []> input_143_pad_type_0 = const()[name = tensor<string, []>("input_143_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_143_strides_0 = const()[name = tensor<string, []>("input_143_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_143_pad_0 = const()[name = tensor<string, []>("input_143_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_143_dilations_0 = const()[name = tensor<string, []>("input_143_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_143_groups_0 = const()[name = tensor<string, []>("input_143_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [200, 80, 1, 1]> const_42_to_fp16 = const()[name = tensor<string, []>("const_42_to_fp16"), val = tensor<fp16, [200, 80, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(187520)))];
            tensor<fp16, [200]> const_43_to_fp16 = const()[name = tensor<string, []>("const_43_to_fp16"), val = tensor<fp16, [200]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(219584)))];
            tensor<fp16, [1, 200, 14, 14]> input_145_cast_fp16 = conv(bias = const_43_to_fp16, dilations = input_143_dilations_0, groups = input_143_groups_0, pad = input_143_pad_0, pad_type = input_143_pad_type_0, strides = input_143_strides_0, weight = const_42_to_fp16, x = input_141_cast_fp16)[name = tensor<string, []>("input_145_cast_fp16")];
            tensor<fp16, []> thresholded_relu_3_alpha_0_to_fp16 = const()[name = tensor<string, []>("thresholded_relu_3_alpha_0_to_fp16"), val = tensor<fp16, []>(-0x1.8p+1)];
            tensor<fp16, [1, 200, 14, 14]> thresholded_relu_3_cast_fp16 = thresholded_relu(alpha = thresholded_relu_3_alpha_0_to_fp16, x = input_145_cast_fp16)[name = tensor<string, []>("thresholded_relu_3_cast_fp16")];
            tensor<fp16, []> sigmoid_hard_3_alpha_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_3_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> sigmoid_hard_3_beta_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_3_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 200, 14, 14]> sigmoid_hard_3_cast_fp16 = sigmoid_hard(alpha = sigmoid_hard_3_alpha_0_to_fp16, beta = sigmoid_hard_3_beta_0_to_fp16, x = thresholded_relu_3_cast_fp16)[name = tensor<string, []>("sigmoid_hard_3_cast_fp16")];
            tensor<fp16, [1, 200, 14, 14]> input_147_cast_fp16 = mul(x = thresholded_relu_3_cast_fp16, y = sigmoid_hard_3_cast_fp16)[name = tensor<string, []>("input_147_cast_fp16")];
            tensor<string, []> input_149_pad_type_0 = const()[name = tensor<string, []>("input_149_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_149_pad_0 = const()[name = tensor<string, []>("input_149_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, []> input_149_groups_0 = const()[name = tensor<string, []>("input_149_groups_0"), val = tensor<int32, []>(200)];
            tensor<int32, [2]> input_149_strides_0 = const()[name = tensor<string, []>("input_149_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_149_dilations_0 = const()[name = tensor<string, []>("input_149_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<fp16, [200, 1, 3, 3]> const_44_to_fp16 = const()[name = tensor<string, []>("const_44_to_fp16"), val = tensor<fp16, [200, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(220096)))];
            tensor<fp16, [200]> const_45_to_fp16 = const()[name = tensor<string, []>("const_45_to_fp16"), val = tensor<fp16, [200]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(223808)))];
            tensor<fp16, [1, 200, 14, 14]> input_151_cast_fp16 = conv(bias = const_45_to_fp16, dilations = input_149_dilations_0, groups = input_149_groups_0, pad = input_149_pad_0, pad_type = input_149_pad_type_0, strides = input_149_strides_0, weight = const_44_to_fp16, x = input_147_cast_fp16)[name = tensor<string, []>("input_151_cast_fp16")];
            tensor<fp16, []> thresholded_relu_4_alpha_0_to_fp16 = const()[name = tensor<string, []>("thresholded_relu_4_alpha_0_to_fp16"), val = tensor<fp16, []>(-0x1.8p+1)];
            tensor<fp16, [1, 200, 14, 14]> thresholded_relu_4_cast_fp16 = thresholded_relu(alpha = thresholded_relu_4_alpha_0_to_fp16, x = input_151_cast_fp16)[name = tensor<string, []>("thresholded_relu_4_cast_fp16")];
            tensor<fp16, []> sigmoid_hard_4_alpha_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_4_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> sigmoid_hard_4_beta_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_4_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 200, 14, 14]> sigmoid_hard_4_cast_fp16 = sigmoid_hard(alpha = sigmoid_hard_4_alpha_0_to_fp16, beta = sigmoid_hard_4_beta_0_to_fp16, x = thresholded_relu_4_cast_fp16)[name = tensor<string, []>("sigmoid_hard_4_cast_fp16")];
            tensor<fp16, [1, 200, 14, 14]> input_153_cast_fp16 = mul(x = thresholded_relu_4_cast_fp16, y = sigmoid_hard_4_cast_fp16)[name = tensor<string, []>("input_153_cast_fp16")];
            tensor<string, []> input_155_pad_type_0 = const()[name = tensor<string, []>("input_155_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_155_strides_0 = const()[name = tensor<string, []>("input_155_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_155_pad_0 = const()[name = tensor<string, []>("input_155_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_155_dilations_0 = const()[name = tensor<string, []>("input_155_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_155_groups_0 = const()[name = tensor<string, []>("input_155_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [80, 200, 1, 1]> const_46_to_fp16 = const()[name = tensor<string, []>("const_46_to_fp16"), val = tensor<fp16, [80, 200, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(224320)))];
            tensor<fp16, [80]> const_47_to_fp16 = const()[name = tensor<string, []>("const_47_to_fp16"), val = tensor<fp16, [80]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(256384)))];
            tensor<fp16, [1, 80, 14, 14]> result_9_cast_fp16 = conv(bias = const_47_to_fp16, dilations = input_155_dilations_0, groups = input_155_groups_0, pad = input_155_pad_0, pad_type = input_155_pad_type_0, strides = input_155_strides_0, weight = const_46_to_fp16, x = input_153_cast_fp16)[name = tensor<string, []>("result_9_cast_fp16")];
            tensor<fp16, [1, 80, 14, 14]> input_157_cast_fp16 = add(x = result_9_cast_fp16, y = input_141_cast_fp16)[name = tensor<string, []>("input_157_cast_fp16")];
            tensor<string, []> input_159_pad_type_0 = const()[name = tensor<string, []>("input_159_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_159_strides_0 = const()[name = tensor<string, []>("input_159_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_159_pad_0 = const()[name = tensor<string, []>("input_159_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_159_dilations_0 = const()[name = tensor<string, []>("input_159_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_159_groups_0 = const()[name = tensor<string, []>("input_159_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [184, 80, 1, 1]> const_48_to_fp16 = const()[name = tensor<string, []>("const_48_to_fp16"), val = tensor<fp16, [184, 80, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(256640)))];
            tensor<fp16, [184]> const_49_to_fp16 = const()[name = tensor<string, []>("const_49_to_fp16"), val = tensor<fp16, [184]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(286144)))];
            tensor<fp16, [1, 184, 14, 14]> input_161_cast_fp16 = conv(bias = const_49_to_fp16, dilations = input_159_dilations_0, groups = input_159_groups_0, pad = input_159_pad_0, pad_type = input_159_pad_type_0, strides = input_159_strides_0, weight = const_48_to_fp16, x = input_157_cast_fp16)[name = tensor<string, []>("input_161_cast_fp16")];
            tensor<fp16, []> thresholded_relu_5_alpha_0_to_fp16 = const()[name = tensor<string, []>("thresholded_relu_5_alpha_0_to_fp16"), val = tensor<fp16, []>(-0x1.8p+1)];
            tensor<fp16, [1, 184, 14, 14]> thresholded_relu_5_cast_fp16 = thresholded_relu(alpha = thresholded_relu_5_alpha_0_to_fp16, x = input_161_cast_fp16)[name = tensor<string, []>("thresholded_relu_5_cast_fp16")];
            tensor<fp16, []> sigmoid_hard_5_alpha_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_5_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> sigmoid_hard_5_beta_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_5_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 184, 14, 14]> sigmoid_hard_5_cast_fp16 = sigmoid_hard(alpha = sigmoid_hard_5_alpha_0_to_fp16, beta = sigmoid_hard_5_beta_0_to_fp16, x = thresholded_relu_5_cast_fp16)[name = tensor<string, []>("sigmoid_hard_5_cast_fp16")];
            tensor<fp16, [1, 184, 14, 14]> input_163_cast_fp16 = mul(x = thresholded_relu_5_cast_fp16, y = sigmoid_hard_5_cast_fp16)[name = tensor<string, []>("input_163_cast_fp16")];
            tensor<string, []> input_165_pad_type_0 = const()[name = tensor<string, []>("input_165_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_165_pad_0 = const()[name = tensor<string, []>("input_165_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, []> input_165_groups_0 = const()[name = tensor<string, []>("input_165_groups_0"), val = tensor<int32, []>(184)];
            tensor<int32, [2]> input_165_strides_0 = const()[name = tensor<string, []>("input_165_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_165_dilations_0 = const()[name = tensor<string, []>("input_165_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<fp16, [184, 1, 3, 3]> const_50_to_fp16 = const()[name = tensor<string, []>("const_50_to_fp16"), val = tensor<fp16, [184, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(286592)))];
            tensor<fp16, [184]> const_51_to_fp16 = const()[name = tensor<string, []>("const_51_to_fp16"), val = tensor<fp16, [184]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(289984)))];
            tensor<fp16, [1, 184, 14, 14]> input_167_cast_fp16 = conv(bias = const_51_to_fp16, dilations = input_165_dilations_0, groups = input_165_groups_0, pad = input_165_pad_0, pad_type = input_165_pad_type_0, strides = input_165_strides_0, weight = const_50_to_fp16, x = input_163_cast_fp16)[name = tensor<string, []>("input_167_cast_fp16")];
            tensor<fp16, []> thresholded_relu_6_alpha_0_to_fp16 = const()[name = tensor<string, []>("thresholded_relu_6_alpha_0_to_fp16"), val = tensor<fp16, []>(-0x1.8p+1)];
            tensor<fp16, [1, 184, 14, 14]> thresholded_relu_6_cast_fp16 = thresholded_relu(alpha = thresholded_relu_6_alpha_0_to_fp16, x = input_167_cast_fp16)[name = tensor<string, []>("thresholded_relu_6_cast_fp16")];
            tensor<fp16, []> sigmoid_hard_6_alpha_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_6_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> sigmoid_hard_6_beta_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_6_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 184, 14, 14]> sigmoid_hard_6_cast_fp16 = sigmoid_hard(alpha = sigmoid_hard_6_alpha_0_to_fp16, beta = sigmoid_hard_6_beta_0_to_fp16, x = thresholded_relu_6_cast_fp16)[name = tensor<string, []>("sigmoid_hard_6_cast_fp16")];
            tensor<fp16, [1, 184, 14, 14]> input_169_cast_fp16 = mul(x = thresholded_relu_6_cast_fp16, y = sigmoid_hard_6_cast_fp16)[name = tensor<string, []>("input_169_cast_fp16")];
            tensor<string, []> input_171_pad_type_0 = const()[name = tensor<string, []>("input_171_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_171_strides_0 = const()[name = tensor<string, []>("input_171_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_171_pad_0 = const()[name = tensor<string, []>("input_171_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_171_dilations_0 = const()[name = tensor<string, []>("input_171_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_171_groups_0 = const()[name = tensor<string, []>("input_171_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [80, 184, 1, 1]> const_52_to_fp16 = const()[name = tensor<string, []>("const_52_to_fp16"), val = tensor<fp16, [80, 184, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(290432)))];
            tensor<fp16, [80]> const_53_to_fp16 = const()[name = tensor<string, []>("const_53_to_fp16"), val = tensor<fp16, [80]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(319936)))];
            tensor<fp16, [1, 80, 14, 14]> result_11_cast_fp16 = conv(bias = const_53_to_fp16, dilations = input_171_dilations_0, groups = input_171_groups_0, pad = input_171_pad_0, pad_type = input_171_pad_type_0, strides = input_171_strides_0, weight = const_52_to_fp16, x = input_169_cast_fp16)[name = tensor<string, []>("result_11_cast_fp16")];
            tensor<fp16, [1, 80, 14, 14]> input_173_cast_fp16 = add(x = result_11_cast_fp16, y = input_157_cast_fp16)[name = tensor<string, []>("input_173_cast_fp16")];
            tensor<string, []> input_175_pad_type_0 = const()[name = tensor<string, []>("input_175_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_175_strides_0 = const()[name = tensor<string, []>("input_175_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_175_pad_0 = const()[name = tensor<string, []>("input_175_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_175_dilations_0 = const()[name = tensor<string, []>("input_175_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_175_groups_0 = const()[name = tensor<string, []>("input_175_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [184, 80, 1, 1]> const_54_to_fp16 = const()[name = tensor<string, []>("const_54_to_fp16"), val = tensor<fp16, [184, 80, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(320192)))];
            tensor<fp16, [184]> const_55_to_fp16 = const()[name = tensor<string, []>("const_55_to_fp16"), val = tensor<fp16, [184]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(349696)))];
            tensor<fp16, [1, 184, 14, 14]> input_177_cast_fp16 = conv(bias = const_55_to_fp16, dilations = input_175_dilations_0, groups = input_175_groups_0, pad = input_175_pad_0, pad_type = input_175_pad_type_0, strides = input_175_strides_0, weight = const_54_to_fp16, x = input_173_cast_fp16)[name = tensor<string, []>("input_177_cast_fp16")];
            tensor<fp16, []> thresholded_relu_7_alpha_0_to_fp16 = const()[name = tensor<string, []>("thresholded_relu_7_alpha_0_to_fp16"), val = tensor<fp16, []>(-0x1.8p+1)];
            tensor<fp16, [1, 184, 14, 14]> thresholded_relu_7_cast_fp16 = thresholded_relu(alpha = thresholded_relu_7_alpha_0_to_fp16, x = input_177_cast_fp16)[name = tensor<string, []>("thresholded_relu_7_cast_fp16")];
            tensor<fp16, []> sigmoid_hard_7_alpha_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_7_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> sigmoid_hard_7_beta_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_7_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 184, 14, 14]> sigmoid_hard_7_cast_fp16 = sigmoid_hard(alpha = sigmoid_hard_7_alpha_0_to_fp16, beta = sigmoid_hard_7_beta_0_to_fp16, x = thresholded_relu_7_cast_fp16)[name = tensor<string, []>("sigmoid_hard_7_cast_fp16")];
            tensor<fp16, [1, 184, 14, 14]> input_179_cast_fp16 = mul(x = thresholded_relu_7_cast_fp16, y = sigmoid_hard_7_cast_fp16)[name = tensor<string, []>("input_179_cast_fp16")];
            tensor<string, []> input_181_pad_type_0 = const()[name = tensor<string, []>("input_181_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_181_pad_0 = const()[name = tensor<string, []>("input_181_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, []> input_181_groups_0 = const()[name = tensor<string, []>("input_181_groups_0"), val = tensor<int32, []>(184)];
            tensor<int32, [2]> input_181_strides_0 = const()[name = tensor<string, []>("input_181_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_181_dilations_0 = const()[name = tensor<string, []>("input_181_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<fp16, [184, 1, 3, 3]> const_56_to_fp16 = const()[name = tensor<string, []>("const_56_to_fp16"), val = tensor<fp16, [184, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(350144)))];
            tensor<fp16, [184]> const_57_to_fp16 = const()[name = tensor<string, []>("const_57_to_fp16"), val = tensor<fp16, [184]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(353536)))];
            tensor<fp16, [1, 184, 14, 14]> input_183_cast_fp16 = conv(bias = const_57_to_fp16, dilations = input_181_dilations_0, groups = input_181_groups_0, pad = input_181_pad_0, pad_type = input_181_pad_type_0, strides = input_181_strides_0, weight = const_56_to_fp16, x = input_179_cast_fp16)[name = tensor<string, []>("input_183_cast_fp16")];
            tensor<fp16, []> thresholded_relu_8_alpha_0_to_fp16 = const()[name = tensor<string, []>("thresholded_relu_8_alpha_0_to_fp16"), val = tensor<fp16, []>(-0x1.8p+1)];
            tensor<fp16, [1, 184, 14, 14]> thresholded_relu_8_cast_fp16 = thresholded_relu(alpha = thresholded_relu_8_alpha_0_to_fp16, x = input_183_cast_fp16)[name = tensor<string, []>("thresholded_relu_8_cast_fp16")];
            tensor<fp16, []> sigmoid_hard_8_alpha_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_8_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> sigmoid_hard_8_beta_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_8_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 184, 14, 14]> sigmoid_hard_8_cast_fp16 = sigmoid_hard(alpha = sigmoid_hard_8_alpha_0_to_fp16, beta = sigmoid_hard_8_beta_0_to_fp16, x = thresholded_relu_8_cast_fp16)[name = tensor<string, []>("sigmoid_hard_8_cast_fp16")];
            tensor<fp16, [1, 184, 14, 14]> input_185_cast_fp16 = mul(x = thresholded_relu_8_cast_fp16, y = sigmoid_hard_8_cast_fp16)[name = tensor<string, []>("input_185_cast_fp16")];
            tensor<string, []> input_187_pad_type_0 = const()[name = tensor<string, []>("input_187_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_187_strides_0 = const()[name = tensor<string, []>("input_187_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_187_pad_0 = const()[name = tensor<string, []>("input_187_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_187_dilations_0 = const()[name = tensor<string, []>("input_187_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_187_groups_0 = const()[name = tensor<string, []>("input_187_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [80, 184, 1, 1]> const_58_to_fp16 = const()[name = tensor<string, []>("const_58_to_fp16"), val = tensor<fp16, [80, 184, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(353984)))];
            tensor<fp16, [80]> const_59_to_fp16 = const()[name = tensor<string, []>("const_59_to_fp16"), val = tensor<fp16, [80]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(383488)))];
            tensor<fp16, [1, 80, 14, 14]> result_13_cast_fp16 = conv(bias = const_59_to_fp16, dilations = input_187_dilations_0, groups = input_187_groups_0, pad = input_187_pad_0, pad_type = input_187_pad_type_0, strides = input_187_strides_0, weight = const_58_to_fp16, x = input_185_cast_fp16)[name = tensor<string, []>("result_13_cast_fp16")];
            tensor<fp16, [1, 80, 14, 14]> input_189_cast_fp16 = add(x = result_13_cast_fp16, y = input_173_cast_fp16)[name = tensor<string, []>("input_189_cast_fp16")];
            tensor<string, []> input_191_pad_type_0 = const()[name = tensor<string, []>("input_191_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_191_strides_0 = const()[name = tensor<string, []>("input_191_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_191_pad_0 = const()[name = tensor<string, []>("input_191_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_191_dilations_0 = const()[name = tensor<string, []>("input_191_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_191_groups_0 = const()[name = tensor<string, []>("input_191_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [480, 80, 1, 1]> const_60_to_fp16 = const()[name = tensor<string, []>("const_60_to_fp16"), val = tensor<fp16, [480, 80, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(383744)))];
            tensor<fp16, [480]> const_61_to_fp16 = const()[name = tensor<string, []>("const_61_to_fp16"), val = tensor<fp16, [480]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(460608)))];
            tensor<fp16, [1, 480, 14, 14]> input_193_cast_fp16 = conv(bias = const_61_to_fp16, dilations = input_191_dilations_0, groups = input_191_groups_0, pad = input_191_pad_0, pad_type = input_191_pad_type_0, strides = input_191_strides_0, weight = const_60_to_fp16, x = input_189_cast_fp16)[name = tensor<string, []>("input_193_cast_fp16")];
            tensor<fp16, []> thresholded_relu_9_alpha_0_to_fp16 = const()[name = tensor<string, []>("thresholded_relu_9_alpha_0_to_fp16"), val = tensor<fp16, []>(-0x1.8p+1)];
            tensor<fp16, [1, 480, 14, 14]> thresholded_relu_9_cast_fp16 = thresholded_relu(alpha = thresholded_relu_9_alpha_0_to_fp16, x = input_193_cast_fp16)[name = tensor<string, []>("thresholded_relu_9_cast_fp16")];
            tensor<fp16, []> sigmoid_hard_9_alpha_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_9_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> sigmoid_hard_9_beta_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_9_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 480, 14, 14]> sigmoid_hard_9_cast_fp16 = sigmoid_hard(alpha = sigmoid_hard_9_alpha_0_to_fp16, beta = sigmoid_hard_9_beta_0_to_fp16, x = thresholded_relu_9_cast_fp16)[name = tensor<string, []>("sigmoid_hard_9_cast_fp16")];
            tensor<fp16, [1, 480, 14, 14]> input_195_cast_fp16 = mul(x = thresholded_relu_9_cast_fp16, y = sigmoid_hard_9_cast_fp16)[name = tensor<string, []>("input_195_cast_fp16")];
            tensor<string, []> input_197_pad_type_0 = const()[name = tensor<string, []>("input_197_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_197_pad_0 = const()[name = tensor<string, []>("input_197_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, []> input_197_groups_0 = const()[name = tensor<string, []>("input_197_groups_0"), val = tensor<int32, []>(480)];
            tensor<int32, [2]> input_197_strides_0 = const()[name = tensor<string, []>("input_197_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_197_dilations_0 = const()[name = tensor<string, []>("input_197_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<fp16, [480, 1, 3, 3]> const_62_to_fp16 = const()[name = tensor<string, []>("const_62_to_fp16"), val = tensor<fp16, [480, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(461632)))];
            tensor<fp16, [480]> const_63_to_fp16 = const()[name = tensor<string, []>("const_63_to_fp16"), val = tensor<fp16, [480]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(470336)))];
            tensor<fp16, [1, 480, 14, 14]> input_199_cast_fp16 = conv(bias = const_63_to_fp16, dilations = input_197_dilations_0, groups = input_197_groups_0, pad = input_197_pad_0, pad_type = input_197_pad_type_0, strides = input_197_strides_0, weight = const_62_to_fp16, x = input_195_cast_fp16)[name = tensor<string, []>("input_199_cast_fp16")];
            tensor<fp16, []> thresholded_relu_10_alpha_0_to_fp16 = const()[name = tensor<string, []>("thresholded_relu_10_alpha_0_to_fp16"), val = tensor<fp16, []>(-0x1.8p+1)];
            tensor<fp16, [1, 480, 14, 14]> thresholded_relu_10_cast_fp16 = thresholded_relu(alpha = thresholded_relu_10_alpha_0_to_fp16, x = input_199_cast_fp16)[name = tensor<string, []>("thresholded_relu_10_cast_fp16")];
            tensor<fp16, []> sigmoid_hard_10_alpha_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_10_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> sigmoid_hard_10_beta_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_10_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 480, 14, 14]> sigmoid_hard_10_cast_fp16 = sigmoid_hard(alpha = sigmoid_hard_10_alpha_0_to_fp16, beta = sigmoid_hard_10_beta_0_to_fp16, x = thresholded_relu_10_cast_fp16)[name = tensor<string, []>("sigmoid_hard_10_cast_fp16")];
            tensor<fp16, [1, 480, 14, 14]> input_201_cast_fp16 = mul(x = thresholded_relu_10_cast_fp16, y = sigmoid_hard_10_cast_fp16)[name = tensor<string, []>("input_201_cast_fp16")];
            tensor<int32, [2]> input_203_axes_0 = const()[name = tensor<string, []>("input_203_axes_0"), val = tensor<int32, [2]>([-2, -1])];
            tensor<bool, []> input_203_keep_dims_0 = const()[name = tensor<string, []>("input_203_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 480, 1, 1]> input_203_cast_fp16 = reduce_mean(axes = input_203_axes_0, keep_dims = input_203_keep_dims_0, x = input_201_cast_fp16)[name = tensor<string, []>("input_203_cast_fp16")];
            tensor<string, []> input_205_pad_type_0 = const()[name = tensor<string, []>("input_205_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_205_strides_0 = const()[name = tensor<string, []>("input_205_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_205_pad_0 = const()[name = tensor<string, []>("input_205_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_205_dilations_0 = const()[name = tensor<string, []>("input_205_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_205_groups_0 = const()[name = tensor<string, []>("input_205_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [120, 480, 1, 1]> features_11_block_2_fc1_weight_to_fp16 = const()[name = tensor<string, []>("features_11_block_2_fc1_weight_to_fp16"), val = tensor<fp16, [120, 480, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(471360)))];
            tensor<fp16, [120]> features_11_block_2_fc1_bias_to_fp16 = const()[name = tensor<string, []>("features_11_block_2_fc1_bias_to_fp16"), val = tensor<fp16, [120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(586624)))];
            tensor<fp16, [1, 120, 1, 1]> input_205_cast_fp16 = conv(bias = features_11_block_2_fc1_bias_to_fp16, dilations = input_205_dilations_0, groups = input_205_groups_0, pad = input_205_pad_0, pad_type = input_205_pad_type_0, strides = input_205_strides_0, weight = features_11_block_2_fc1_weight_to_fp16, x = input_203_cast_fp16)[name = tensor<string, []>("input_205_cast_fp16")];
            tensor<fp16, [1, 120, 1, 1]> input_207_cast_fp16 = relu(x = input_205_cast_fp16)[name = tensor<string, []>("input_207_cast_fp16")];
            tensor<string, []> input_209_pad_type_0 = const()[name = tensor<string, []>("input_209_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_209_strides_0 = const()[name = tensor<string, []>("input_209_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_209_pad_0 = const()[name = tensor<string, []>("input_209_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_209_dilations_0 = const()[name = tensor<string, []>("input_209_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_209_groups_0 = const()[name = tensor<string, []>("input_209_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [480, 120, 1, 1]> features_11_block_2_fc2_weight_to_fp16 = const()[name = tensor<string, []>("features_11_block_2_fc2_weight_to_fp16"), val = tensor<fp16, [480, 120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(586944)))];
            tensor<fp16, [480]> features_11_block_2_fc2_bias_to_fp16 = const()[name = tensor<string, []>("features_11_block_2_fc2_bias_to_fp16"), val = tensor<fp16, [480]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(702208)))];
            tensor<fp16, [1, 480, 1, 1]> input_209_cast_fp16 = conv(bias = features_11_block_2_fc2_bias_to_fp16, dilations = input_209_dilations_0, groups = input_209_groups_0, pad = input_209_pad_0, pad_type = input_209_pad_type_0, strides = input_209_strides_0, weight = features_11_block_2_fc2_weight_to_fp16, x = input_207_cast_fp16)[name = tensor<string, []>("input_209_cast_fp16")];
            tensor<fp16, []> scale_7_alpha_0_to_fp16 = const()[name = tensor<string, []>("scale_7_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> scale_7_beta_0_to_fp16 = const()[name = tensor<string, []>("scale_7_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 480, 1, 1]> scale_7_cast_fp16 = sigmoid_hard(alpha = scale_7_alpha_0_to_fp16, beta = scale_7_beta_0_to_fp16, x = input_209_cast_fp16)[name = tensor<string, []>("scale_7_cast_fp16")];
            tensor<fp16, [1, 480, 14, 14]> input_211_cast_fp16 = mul(x = scale_7_cast_fp16, y = input_201_cast_fp16)[name = tensor<string, []>("input_211_cast_fp16")];
            tensor<string, []> input_213_pad_type_0 = const()[name = tensor<string, []>("input_213_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_213_strides_0 = const()[name = tensor<string, []>("input_213_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_213_pad_0 = const()[name = tensor<string, []>("input_213_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_213_dilations_0 = const()[name = tensor<string, []>("input_213_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_213_groups_0 = const()[name = tensor<string, []>("input_213_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [112, 480, 1, 1]> const_64_to_fp16 = const()[name = tensor<string, []>("const_64_to_fp16"), val = tensor<fp16, [112, 480, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(703232)))];
            tensor<fp16, [112]> const_65_to_fp16 = const()[name = tensor<string, []>("const_65_to_fp16"), val = tensor<fp16, [112]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(810816)))];
            tensor<fp16, [1, 112, 14, 14]> input_215_cast_fp16 = conv(bias = const_65_to_fp16, dilations = input_213_dilations_0, groups = input_213_groups_0, pad = input_213_pad_0, pad_type = input_213_pad_type_0, strides = input_213_strides_0, weight = const_64_to_fp16, x = input_211_cast_fp16)[name = tensor<string, []>("input_215_cast_fp16")];
            tensor<string, []> input_217_pad_type_0 = const()[name = tensor<string, []>("input_217_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_217_strides_0 = const()[name = tensor<string, []>("input_217_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_217_pad_0 = const()[name = tensor<string, []>("input_217_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_217_dilations_0 = const()[name = tensor<string, []>("input_217_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_217_groups_0 = const()[name = tensor<string, []>("input_217_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [672, 112, 1, 1]> const_66_to_fp16 = const()[name = tensor<string, []>("const_66_to_fp16"), val = tensor<fp16, [672, 112, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(811136)))];
            tensor<fp16, [672]> const_67_to_fp16 = const()[name = tensor<string, []>("const_67_to_fp16"), val = tensor<fp16, [672]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(961728)))];
            tensor<fp16, [1, 672, 14, 14]> input_219_cast_fp16 = conv(bias = const_67_to_fp16, dilations = input_217_dilations_0, groups = input_217_groups_0, pad = input_217_pad_0, pad_type = input_217_pad_type_0, strides = input_217_strides_0, weight = const_66_to_fp16, x = input_215_cast_fp16)[name = tensor<string, []>("input_219_cast_fp16")];
            tensor<fp16, []> thresholded_relu_11_alpha_0_to_fp16 = const()[name = tensor<string, []>("thresholded_relu_11_alpha_0_to_fp16"), val = tensor<fp16, []>(-0x1.8p+1)];
            tensor<fp16, [1, 672, 14, 14]> thresholded_relu_11_cast_fp16 = thresholded_relu(alpha = thresholded_relu_11_alpha_0_to_fp16, x = input_219_cast_fp16)[name = tensor<string, []>("thresholded_relu_11_cast_fp16")];
            tensor<fp16, []> sigmoid_hard_11_alpha_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_11_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> sigmoid_hard_11_beta_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_11_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 672, 14, 14]> sigmoid_hard_11_cast_fp16 = sigmoid_hard(alpha = sigmoid_hard_11_alpha_0_to_fp16, beta = sigmoid_hard_11_beta_0_to_fp16, x = thresholded_relu_11_cast_fp16)[name = tensor<string, []>("sigmoid_hard_11_cast_fp16")];
            tensor<fp16, [1, 672, 14, 14]> input_221_cast_fp16 = mul(x = thresholded_relu_11_cast_fp16, y = sigmoid_hard_11_cast_fp16)[name = tensor<string, []>("input_221_cast_fp16")];
            tensor<string, []> input_223_pad_type_0 = const()[name = tensor<string, []>("input_223_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_223_pad_0 = const()[name = tensor<string, []>("input_223_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, []> input_223_groups_0 = const()[name = tensor<string, []>("input_223_groups_0"), val = tensor<int32, []>(672)];
            tensor<int32, [2]> input_223_strides_0 = const()[name = tensor<string, []>("input_223_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_223_dilations_0 = const()[name = tensor<string, []>("input_223_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<fp16, [672, 1, 3, 3]> const_68_to_fp16 = const()[name = tensor<string, []>("const_68_to_fp16"), val = tensor<fp16, [672, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(963136)))];
            tensor<fp16, [672]> const_69_to_fp16 = const()[name = tensor<string, []>("const_69_to_fp16"), val = tensor<fp16, [672]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(975296)))];
            tensor<fp16, [1, 672, 14, 14]> input_225_cast_fp16 = conv(bias = const_69_to_fp16, dilations = input_223_dilations_0, groups = input_223_groups_0, pad = input_223_pad_0, pad_type = input_223_pad_type_0, strides = input_223_strides_0, weight = const_68_to_fp16, x = input_221_cast_fp16)[name = tensor<string, []>("input_225_cast_fp16")];
            tensor<fp16, []> thresholded_relu_12_alpha_0_to_fp16 = const()[name = tensor<string, []>("thresholded_relu_12_alpha_0_to_fp16"), val = tensor<fp16, []>(-0x1.8p+1)];
            tensor<fp16, [1, 672, 14, 14]> thresholded_relu_12_cast_fp16 = thresholded_relu(alpha = thresholded_relu_12_alpha_0_to_fp16, x = input_225_cast_fp16)[name = tensor<string, []>("thresholded_relu_12_cast_fp16")];
            tensor<fp16, []> sigmoid_hard_12_alpha_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_12_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> sigmoid_hard_12_beta_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_12_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 672, 14, 14]> sigmoid_hard_12_cast_fp16 = sigmoid_hard(alpha = sigmoid_hard_12_alpha_0_to_fp16, beta = sigmoid_hard_12_beta_0_to_fp16, x = thresholded_relu_12_cast_fp16)[name = tensor<string, []>("sigmoid_hard_12_cast_fp16")];
            tensor<fp16, [1, 672, 14, 14]> input_227_cast_fp16 = mul(x = thresholded_relu_12_cast_fp16, y = sigmoid_hard_12_cast_fp16)[name = tensor<string, []>("input_227_cast_fp16")];
            tensor<int32, [2]> input_229_axes_0 = const()[name = tensor<string, []>("input_229_axes_0"), val = tensor<int32, [2]>([-2, -1])];
            tensor<bool, []> input_229_keep_dims_0 = const()[name = tensor<string, []>("input_229_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 672, 1, 1]> input_229_cast_fp16 = reduce_mean(axes = input_229_axes_0, keep_dims = input_229_keep_dims_0, x = input_227_cast_fp16)[name = tensor<string, []>("input_229_cast_fp16")];
            tensor<string, []> input_231_pad_type_0 = const()[name = tensor<string, []>("input_231_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_231_strides_0 = const()[name = tensor<string, []>("input_231_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_231_pad_0 = const()[name = tensor<string, []>("input_231_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_231_dilations_0 = const()[name = tensor<string, []>("input_231_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_231_groups_0 = const()[name = tensor<string, []>("input_231_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [168, 672, 1, 1]> features_12_block_2_fc1_weight_to_fp16 = const()[name = tensor<string, []>("features_12_block_2_fc1_weight_to_fp16"), val = tensor<fp16, [168, 672, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(976704)))];
            tensor<fp16, [168]> features_12_block_2_fc1_bias_to_fp16 = const()[name = tensor<string, []>("features_12_block_2_fc1_bias_to_fp16"), val = tensor<fp16, [168]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1202560)))];
            tensor<fp16, [1, 168, 1, 1]> input_231_cast_fp16 = conv(bias = features_12_block_2_fc1_bias_to_fp16, dilations = input_231_dilations_0, groups = input_231_groups_0, pad = input_231_pad_0, pad_type = input_231_pad_type_0, strides = input_231_strides_0, weight = features_12_block_2_fc1_weight_to_fp16, x = input_229_cast_fp16)[name = tensor<string, []>("input_231_cast_fp16")];
            tensor<fp16, [1, 168, 1, 1]> input_233_cast_fp16 = relu(x = input_231_cast_fp16)[name = tensor<string, []>("input_233_cast_fp16")];
            tensor<string, []> input_235_pad_type_0 = const()[name = tensor<string, []>("input_235_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_235_strides_0 = const()[name = tensor<string, []>("input_235_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_235_pad_0 = const()[name = tensor<string, []>("input_235_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_235_dilations_0 = const()[name = tensor<string, []>("input_235_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_235_groups_0 = const()[name = tensor<string, []>("input_235_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [672, 168, 1, 1]> features_12_block_2_fc2_weight_to_fp16 = const()[name = tensor<string, []>("features_12_block_2_fc2_weight_to_fp16"), val = tensor<fp16, [672, 168, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1203008)))];
            tensor<fp16, [672]> features_12_block_2_fc2_bias_to_fp16 = const()[name = tensor<string, []>("features_12_block_2_fc2_bias_to_fp16"), val = tensor<fp16, [672]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1428864)))];
            tensor<fp16, [1, 672, 1, 1]> input_235_cast_fp16 = conv(bias = features_12_block_2_fc2_bias_to_fp16, dilations = input_235_dilations_0, groups = input_235_groups_0, pad = input_235_pad_0, pad_type = input_235_pad_type_0, strides = input_235_strides_0, weight = features_12_block_2_fc2_weight_to_fp16, x = input_233_cast_fp16)[name = tensor<string, []>("input_235_cast_fp16")];
            tensor<fp16, []> scale_9_alpha_0_to_fp16 = const()[name = tensor<string, []>("scale_9_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> scale_9_beta_0_to_fp16 = const()[name = tensor<string, []>("scale_9_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 672, 1, 1]> scale_9_cast_fp16 = sigmoid_hard(alpha = scale_9_alpha_0_to_fp16, beta = scale_9_beta_0_to_fp16, x = input_235_cast_fp16)[name = tensor<string, []>("scale_9_cast_fp16")];
            tensor<fp16, [1, 672, 14, 14]> input_237_cast_fp16 = mul(x = scale_9_cast_fp16, y = input_227_cast_fp16)[name = tensor<string, []>("input_237_cast_fp16")];
            tensor<string, []> input_239_pad_type_0 = const()[name = tensor<string, []>("input_239_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_239_strides_0 = const()[name = tensor<string, []>("input_239_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_239_pad_0 = const()[name = tensor<string, []>("input_239_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_239_dilations_0 = const()[name = tensor<string, []>("input_239_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_239_groups_0 = const()[name = tensor<string, []>("input_239_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [112, 672, 1, 1]> const_70_to_fp16 = const()[name = tensor<string, []>("const_70_to_fp16"), val = tensor<fp16, [112, 672, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1430272)))];
            tensor<fp16, [112]> const_71_to_fp16 = const()[name = tensor<string, []>("const_71_to_fp16"), val = tensor<fp16, [112]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1580864)))];
            tensor<fp16, [1, 112, 14, 14]> result_15_cast_fp16 = conv(bias = const_71_to_fp16, dilations = input_239_dilations_0, groups = input_239_groups_0, pad = input_239_pad_0, pad_type = input_239_pad_type_0, strides = input_239_strides_0, weight = const_70_to_fp16, x = input_237_cast_fp16)[name = tensor<string, []>("result_15_cast_fp16")];
            tensor<fp16, [1, 112, 14, 14]> input_241_cast_fp16 = add(x = result_15_cast_fp16, y = input_215_cast_fp16)[name = tensor<string, []>("input_241_cast_fp16")];
            tensor<string, []> input_243_pad_type_0 = const()[name = tensor<string, []>("input_243_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_243_strides_0 = const()[name = tensor<string, []>("input_243_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_243_pad_0 = const()[name = tensor<string, []>("input_243_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_243_dilations_0 = const()[name = tensor<string, []>("input_243_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_243_groups_0 = const()[name = tensor<string, []>("input_243_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [672, 112, 1, 1]> const_72_to_fp16 = const()[name = tensor<string, []>("const_72_to_fp16"), val = tensor<fp16, [672, 112, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1581184)))];
            tensor<fp16, [672]> const_73_to_fp16 = const()[name = tensor<string, []>("const_73_to_fp16"), val = tensor<fp16, [672]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1731776)))];
            tensor<fp16, [1, 672, 14, 14]> input_245_cast_fp16 = conv(bias = const_73_to_fp16, dilations = input_243_dilations_0, groups = input_243_groups_0, pad = input_243_pad_0, pad_type = input_243_pad_type_0, strides = input_243_strides_0, weight = const_72_to_fp16, x = input_241_cast_fp16)[name = tensor<string, []>("input_245_cast_fp16")];
            tensor<fp16, []> thresholded_relu_13_alpha_0_to_fp16 = const()[name = tensor<string, []>("thresholded_relu_13_alpha_0_to_fp16"), val = tensor<fp16, []>(-0x1.8p+1)];
            tensor<fp16, [1, 672, 14, 14]> thresholded_relu_13_cast_fp16 = thresholded_relu(alpha = thresholded_relu_13_alpha_0_to_fp16, x = input_245_cast_fp16)[name = tensor<string, []>("thresholded_relu_13_cast_fp16")];
            tensor<fp16, []> sigmoid_hard_13_alpha_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_13_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> sigmoid_hard_13_beta_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_13_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 672, 14, 14]> sigmoid_hard_13_cast_fp16 = sigmoid_hard(alpha = sigmoid_hard_13_alpha_0_to_fp16, beta = sigmoid_hard_13_beta_0_to_fp16, x = thresholded_relu_13_cast_fp16)[name = tensor<string, []>("sigmoid_hard_13_cast_fp16")];
            tensor<fp16, [1, 672, 14, 14]> input_247_cast_fp16 = mul(x = thresholded_relu_13_cast_fp16, y = sigmoid_hard_13_cast_fp16)[name = tensor<string, []>("input_247_cast_fp16")];
            tensor<string, []> input_249_pad_type_0 = const()[name = tensor<string, []>("input_249_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_249_pad_0 = const()[name = tensor<string, []>("input_249_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<int32, [2]> input_249_strides_0 = const()[name = tensor<string, []>("input_249_strides_0"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, []> input_249_groups_0 = const()[name = tensor<string, []>("input_249_groups_0"), val = tensor<int32, []>(672)];
            tensor<int32, [2]> input_249_dilations_0 = const()[name = tensor<string, []>("input_249_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<fp16, [672, 1, 5, 5]> const_74_to_fp16 = const()[name = tensor<string, []>("const_74_to_fp16"), val = tensor<fp16, [672, 1, 5, 5]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1733184)))];
            tensor<fp16, [672]> const_75_to_fp16 = const()[name = tensor<string, []>("const_75_to_fp16"), val = tensor<fp16, [672]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1766848)))];
            tensor<fp16, [1, 672, 7, 7]> input_251_cast_fp16 = conv(bias = const_75_to_fp16, dilations = input_249_dilations_0, groups = input_249_groups_0, pad = input_249_pad_0, pad_type = input_249_pad_type_0, strides = input_249_strides_0, weight = const_74_to_fp16, x = input_247_cast_fp16)[name = tensor<string, []>("input_251_cast_fp16")];
            tensor<fp16, []> thresholded_relu_14_alpha_0_to_fp16 = const()[name = tensor<string, []>("thresholded_relu_14_alpha_0_to_fp16"), val = tensor<fp16, []>(-0x1.8p+1)];
            tensor<fp16, [1, 672, 7, 7]> thresholded_relu_14_cast_fp16 = thresholded_relu(alpha = thresholded_relu_14_alpha_0_to_fp16, x = input_251_cast_fp16)[name = tensor<string, []>("thresholded_relu_14_cast_fp16")];
            tensor<fp16, []> sigmoid_hard_14_alpha_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_14_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> sigmoid_hard_14_beta_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_14_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 672, 7, 7]> sigmoid_hard_14_cast_fp16 = sigmoid_hard(alpha = sigmoid_hard_14_alpha_0_to_fp16, beta = sigmoid_hard_14_beta_0_to_fp16, x = thresholded_relu_14_cast_fp16)[name = tensor<string, []>("sigmoid_hard_14_cast_fp16")];
            tensor<fp16, [1, 672, 7, 7]> input_253_cast_fp16 = mul(x = thresholded_relu_14_cast_fp16, y = sigmoid_hard_14_cast_fp16)[name = tensor<string, []>("input_253_cast_fp16")];
            tensor<int32, [2]> input_255_axes_0 = const()[name = tensor<string, []>("input_255_axes_0"), val = tensor<int32, [2]>([-2, -1])];
            tensor<bool, []> input_255_keep_dims_0 = const()[name = tensor<string, []>("input_255_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 672, 1, 1]> input_255_cast_fp16 = reduce_mean(axes = input_255_axes_0, keep_dims = input_255_keep_dims_0, x = input_253_cast_fp16)[name = tensor<string, []>("input_255_cast_fp16")];
            tensor<string, []> input_257_pad_type_0 = const()[name = tensor<string, []>("input_257_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_257_strides_0 = const()[name = tensor<string, []>("input_257_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_257_pad_0 = const()[name = tensor<string, []>("input_257_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_257_dilations_0 = const()[name = tensor<string, []>("input_257_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_257_groups_0 = const()[name = tensor<string, []>("input_257_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [168, 672, 1, 1]> features_13_block_2_fc1_weight_to_fp16 = const()[name = tensor<string, []>("features_13_block_2_fc1_weight_to_fp16"), val = tensor<fp16, [168, 672, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1768256)))];
            tensor<fp16, [168]> features_13_block_2_fc1_bias_to_fp16 = const()[name = tensor<string, []>("features_13_block_2_fc1_bias_to_fp16"), val = tensor<fp16, [168]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1994112)))];
            tensor<fp16, [1, 168, 1, 1]> input_257_cast_fp16 = conv(bias = features_13_block_2_fc1_bias_to_fp16, dilations = input_257_dilations_0, groups = input_257_groups_0, pad = input_257_pad_0, pad_type = input_257_pad_type_0, strides = input_257_strides_0, weight = features_13_block_2_fc1_weight_to_fp16, x = input_255_cast_fp16)[name = tensor<string, []>("input_257_cast_fp16")];
            tensor<fp16, [1, 168, 1, 1]> input_259_cast_fp16 = relu(x = input_257_cast_fp16)[name = tensor<string, []>("input_259_cast_fp16")];
            tensor<string, []> input_261_pad_type_0 = const()[name = tensor<string, []>("input_261_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_261_strides_0 = const()[name = tensor<string, []>("input_261_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_261_pad_0 = const()[name = tensor<string, []>("input_261_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_261_dilations_0 = const()[name = tensor<string, []>("input_261_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_261_groups_0 = const()[name = tensor<string, []>("input_261_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [672, 168, 1, 1]> features_13_block_2_fc2_weight_to_fp16 = const()[name = tensor<string, []>("features_13_block_2_fc2_weight_to_fp16"), val = tensor<fp16, [672, 168, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1994560)))];
            tensor<fp16, [672]> features_13_block_2_fc2_bias_to_fp16 = const()[name = tensor<string, []>("features_13_block_2_fc2_bias_to_fp16"), val = tensor<fp16, [672]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2220416)))];
            tensor<fp16, [1, 672, 1, 1]> input_261_cast_fp16 = conv(bias = features_13_block_2_fc2_bias_to_fp16, dilations = input_261_dilations_0, groups = input_261_groups_0, pad = input_261_pad_0, pad_type = input_261_pad_type_0, strides = input_261_strides_0, weight = features_13_block_2_fc2_weight_to_fp16, x = input_259_cast_fp16)[name = tensor<string, []>("input_261_cast_fp16")];
            tensor<fp16, []> scale_11_alpha_0_to_fp16 = const()[name = tensor<string, []>("scale_11_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> scale_11_beta_0_to_fp16 = const()[name = tensor<string, []>("scale_11_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 672, 1, 1]> scale_11_cast_fp16 = sigmoid_hard(alpha = scale_11_alpha_0_to_fp16, beta = scale_11_beta_0_to_fp16, x = input_261_cast_fp16)[name = tensor<string, []>("scale_11_cast_fp16")];
            tensor<fp16, [1, 672, 7, 7]> input_263_cast_fp16 = mul(x = scale_11_cast_fp16, y = input_253_cast_fp16)[name = tensor<string, []>("input_263_cast_fp16")];
            tensor<string, []> input_265_pad_type_0 = const()[name = tensor<string, []>("input_265_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_265_strides_0 = const()[name = tensor<string, []>("input_265_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_265_pad_0 = const()[name = tensor<string, []>("input_265_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_265_dilations_0 = const()[name = tensor<string, []>("input_265_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_265_groups_0 = const()[name = tensor<string, []>("input_265_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [160, 672, 1, 1]> const_76_to_fp16 = const()[name = tensor<string, []>("const_76_to_fp16"), val = tensor<fp16, [160, 672, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2221824)))];
            tensor<fp16, [160]> const_77_to_fp16 = const()[name = tensor<string, []>("const_77_to_fp16"), val = tensor<fp16, [160]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2436928)))];
            tensor<fp16, [1, 160, 7, 7]> input_267_cast_fp16 = conv(bias = const_77_to_fp16, dilations = input_265_dilations_0, groups = input_265_groups_0, pad = input_265_pad_0, pad_type = input_265_pad_type_0, strides = input_265_strides_0, weight = const_76_to_fp16, x = input_263_cast_fp16)[name = tensor<string, []>("input_267_cast_fp16")];
            tensor<string, []> input_269_pad_type_0 = const()[name = tensor<string, []>("input_269_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_269_strides_0 = const()[name = tensor<string, []>("input_269_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_269_pad_0 = const()[name = tensor<string, []>("input_269_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_269_dilations_0 = const()[name = tensor<string, []>("input_269_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_269_groups_0 = const()[name = tensor<string, []>("input_269_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [960, 160, 1, 1]> const_78_to_fp16 = const()[name = tensor<string, []>("const_78_to_fp16"), val = tensor<fp16, [960, 160, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2437312)))];
            tensor<fp16, [960]> const_79_to_fp16 = const()[name = tensor<string, []>("const_79_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2744576)))];
            tensor<fp16, [1, 960, 7, 7]> input_271_cast_fp16 = conv(bias = const_79_to_fp16, dilations = input_269_dilations_0, groups = input_269_groups_0, pad = input_269_pad_0, pad_type = input_269_pad_type_0, strides = input_269_strides_0, weight = const_78_to_fp16, x = input_267_cast_fp16)[name = tensor<string, []>("input_271_cast_fp16")];
            tensor<fp16, []> thresholded_relu_15_alpha_0_to_fp16 = const()[name = tensor<string, []>("thresholded_relu_15_alpha_0_to_fp16"), val = tensor<fp16, []>(-0x1.8p+1)];
            tensor<fp16, [1, 960, 7, 7]> thresholded_relu_15_cast_fp16 = thresholded_relu(alpha = thresholded_relu_15_alpha_0_to_fp16, x = input_271_cast_fp16)[name = tensor<string, []>("thresholded_relu_15_cast_fp16")];
            tensor<fp16, []> sigmoid_hard_15_alpha_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_15_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> sigmoid_hard_15_beta_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_15_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 960, 7, 7]> sigmoid_hard_15_cast_fp16 = sigmoid_hard(alpha = sigmoid_hard_15_alpha_0_to_fp16, beta = sigmoid_hard_15_beta_0_to_fp16, x = thresholded_relu_15_cast_fp16)[name = tensor<string, []>("sigmoid_hard_15_cast_fp16")];
            tensor<fp16, [1, 960, 7, 7]> input_273_cast_fp16 = mul(x = thresholded_relu_15_cast_fp16, y = sigmoid_hard_15_cast_fp16)[name = tensor<string, []>("input_273_cast_fp16")];
            tensor<string, []> input_275_pad_type_0 = const()[name = tensor<string, []>("input_275_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_275_pad_0 = const()[name = tensor<string, []>("input_275_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<int32, []> input_275_groups_0 = const()[name = tensor<string, []>("input_275_groups_0"), val = tensor<int32, []>(960)];
            tensor<int32, [2]> input_275_strides_0 = const()[name = tensor<string, []>("input_275_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_275_dilations_0 = const()[name = tensor<string, []>("input_275_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<fp16, [960, 1, 5, 5]> const_80_to_fp16 = const()[name = tensor<string, []>("const_80_to_fp16"), val = tensor<fp16, [960, 1, 5, 5]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2746560)))];
            tensor<fp16, [960]> const_81_to_fp16 = const()[name = tensor<string, []>("const_81_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2794624)))];
            tensor<fp16, [1, 960, 7, 7]> input_277_cast_fp16 = conv(bias = const_81_to_fp16, dilations = input_275_dilations_0, groups = input_275_groups_0, pad = input_275_pad_0, pad_type = input_275_pad_type_0, strides = input_275_strides_0, weight = const_80_to_fp16, x = input_273_cast_fp16)[name = tensor<string, []>("input_277_cast_fp16")];
            tensor<fp16, []> thresholded_relu_16_alpha_0_to_fp16 = const()[name = tensor<string, []>("thresholded_relu_16_alpha_0_to_fp16"), val = tensor<fp16, []>(-0x1.8p+1)];
            tensor<fp16, [1, 960, 7, 7]> thresholded_relu_16_cast_fp16 = thresholded_relu(alpha = thresholded_relu_16_alpha_0_to_fp16, x = input_277_cast_fp16)[name = tensor<string, []>("thresholded_relu_16_cast_fp16")];
            tensor<fp16, []> sigmoid_hard_16_alpha_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_16_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> sigmoid_hard_16_beta_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_16_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 960, 7, 7]> sigmoid_hard_16_cast_fp16 = sigmoid_hard(alpha = sigmoid_hard_16_alpha_0_to_fp16, beta = sigmoid_hard_16_beta_0_to_fp16, x = thresholded_relu_16_cast_fp16)[name = tensor<string, []>("sigmoid_hard_16_cast_fp16")];
            tensor<fp16, [1, 960, 7, 7]> input_279_cast_fp16 = mul(x = thresholded_relu_16_cast_fp16, y = sigmoid_hard_16_cast_fp16)[name = tensor<string, []>("input_279_cast_fp16")];
            tensor<int32, [2]> input_281_axes_0 = const()[name = tensor<string, []>("input_281_axes_0"), val = tensor<int32, [2]>([-2, -1])];
            tensor<bool, []> input_281_keep_dims_0 = const()[name = tensor<string, []>("input_281_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 960, 1, 1]> input_281_cast_fp16 = reduce_mean(axes = input_281_axes_0, keep_dims = input_281_keep_dims_0, x = input_279_cast_fp16)[name = tensor<string, []>("input_281_cast_fp16")];
            tensor<string, []> input_283_pad_type_0 = const()[name = tensor<string, []>("input_283_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_283_strides_0 = const()[name = tensor<string, []>("input_283_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_283_pad_0 = const()[name = tensor<string, []>("input_283_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_283_dilations_0 = const()[name = tensor<string, []>("input_283_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_283_groups_0 = const()[name = tensor<string, []>("input_283_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [240, 960, 1, 1]> features_14_block_2_fc1_weight_to_fp16 = const()[name = tensor<string, []>("features_14_block_2_fc1_weight_to_fp16"), val = tensor<fp16, [240, 960, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2796608)))];
            tensor<fp16, [240]> features_14_block_2_fc1_bias_to_fp16 = const()[name = tensor<string, []>("features_14_block_2_fc1_bias_to_fp16"), val = tensor<fp16, [240]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3257472)))];
            tensor<fp16, [1, 240, 1, 1]> input_283_cast_fp16 = conv(bias = features_14_block_2_fc1_bias_to_fp16, dilations = input_283_dilations_0, groups = input_283_groups_0, pad = input_283_pad_0, pad_type = input_283_pad_type_0, strides = input_283_strides_0, weight = features_14_block_2_fc1_weight_to_fp16, x = input_281_cast_fp16)[name = tensor<string, []>("input_283_cast_fp16")];
            tensor<fp16, [1, 240, 1, 1]> input_285_cast_fp16 = relu(x = input_283_cast_fp16)[name = tensor<string, []>("input_285_cast_fp16")];
            tensor<string, []> input_287_pad_type_0 = const()[name = tensor<string, []>("input_287_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_287_strides_0 = const()[name = tensor<string, []>("input_287_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_287_pad_0 = const()[name = tensor<string, []>("input_287_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_287_dilations_0 = const()[name = tensor<string, []>("input_287_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_287_groups_0 = const()[name = tensor<string, []>("input_287_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [960, 240, 1, 1]> features_14_block_2_fc2_weight_to_fp16 = const()[name = tensor<string, []>("features_14_block_2_fc2_weight_to_fp16"), val = tensor<fp16, [960, 240, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3258048)))];
            tensor<fp16, [960]> features_14_block_2_fc2_bias_to_fp16 = const()[name = tensor<string, []>("features_14_block_2_fc2_bias_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3718912)))];
            tensor<fp16, [1, 960, 1, 1]> input_287_cast_fp16 = conv(bias = features_14_block_2_fc2_bias_to_fp16, dilations = input_287_dilations_0, groups = input_287_groups_0, pad = input_287_pad_0, pad_type = input_287_pad_type_0, strides = input_287_strides_0, weight = features_14_block_2_fc2_weight_to_fp16, x = input_285_cast_fp16)[name = tensor<string, []>("input_287_cast_fp16")];
            tensor<fp16, []> scale_13_alpha_0_to_fp16 = const()[name = tensor<string, []>("scale_13_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> scale_13_beta_0_to_fp16 = const()[name = tensor<string, []>("scale_13_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 960, 1, 1]> scale_13_cast_fp16 = sigmoid_hard(alpha = scale_13_alpha_0_to_fp16, beta = scale_13_beta_0_to_fp16, x = input_287_cast_fp16)[name = tensor<string, []>("scale_13_cast_fp16")];
            tensor<fp16, [1, 960, 7, 7]> input_289_cast_fp16 = mul(x = scale_13_cast_fp16, y = input_279_cast_fp16)[name = tensor<string, []>("input_289_cast_fp16")];
            tensor<string, []> input_291_pad_type_0 = const()[name = tensor<string, []>("input_291_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_291_strides_0 = const()[name = tensor<string, []>("input_291_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_291_pad_0 = const()[name = tensor<string, []>("input_291_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_291_dilations_0 = const()[name = tensor<string, []>("input_291_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_291_groups_0 = const()[name = tensor<string, []>("input_291_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [160, 960, 1, 1]> const_82_to_fp16 = const()[name = tensor<string, []>("const_82_to_fp16"), val = tensor<fp16, [160, 960, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3720896)))];
            tensor<fp16, [160]> const_83_to_fp16 = const()[name = tensor<string, []>("const_83_to_fp16"), val = tensor<fp16, [160]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4028160)))];
            tensor<fp16, [1, 160, 7, 7]> result_17_cast_fp16 = conv(bias = const_83_to_fp16, dilations = input_291_dilations_0, groups = input_291_groups_0, pad = input_291_pad_0, pad_type = input_291_pad_type_0, strides = input_291_strides_0, weight = const_82_to_fp16, x = input_289_cast_fp16)[name = tensor<string, []>("result_17_cast_fp16")];
            tensor<fp16, [1, 160, 7, 7]> input_293_cast_fp16 = add(x = result_17_cast_fp16, y = input_267_cast_fp16)[name = tensor<string, []>("input_293_cast_fp16")];
            tensor<string, []> input_295_pad_type_0 = const()[name = tensor<string, []>("input_295_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_295_strides_0 = const()[name = tensor<string, []>("input_295_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_295_pad_0 = const()[name = tensor<string, []>("input_295_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_295_dilations_0 = const()[name = tensor<string, []>("input_295_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_295_groups_0 = const()[name = tensor<string, []>("input_295_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [960, 160, 1, 1]> const_84_to_fp16 = const()[name = tensor<string, []>("const_84_to_fp16"), val = tensor<fp16, [960, 160, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4028544)))];
            tensor<fp16, [960]> const_85_to_fp16 = const()[name = tensor<string, []>("const_85_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4335808)))];
            tensor<fp16, [1, 960, 7, 7]> input_297_cast_fp16 = conv(bias = const_85_to_fp16, dilations = input_295_dilations_0, groups = input_295_groups_0, pad = input_295_pad_0, pad_type = input_295_pad_type_0, strides = input_295_strides_0, weight = const_84_to_fp16, x = input_293_cast_fp16)[name = tensor<string, []>("input_297_cast_fp16")];
            tensor<fp16, []> thresholded_relu_17_alpha_0_to_fp16 = const()[name = tensor<string, []>("thresholded_relu_17_alpha_0_to_fp16"), val = tensor<fp16, []>(-0x1.8p+1)];
            tensor<fp16, [1, 960, 7, 7]> thresholded_relu_17_cast_fp16 = thresholded_relu(alpha = thresholded_relu_17_alpha_0_to_fp16, x = input_297_cast_fp16)[name = tensor<string, []>("thresholded_relu_17_cast_fp16")];
            tensor<fp16, []> sigmoid_hard_17_alpha_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_17_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> sigmoid_hard_17_beta_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_17_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 960, 7, 7]> sigmoid_hard_17_cast_fp16 = sigmoid_hard(alpha = sigmoid_hard_17_alpha_0_to_fp16, beta = sigmoid_hard_17_beta_0_to_fp16, x = thresholded_relu_17_cast_fp16)[name = tensor<string, []>("sigmoid_hard_17_cast_fp16")];
            tensor<fp16, [1, 960, 7, 7]> input_299_cast_fp16 = mul(x = thresholded_relu_17_cast_fp16, y = sigmoid_hard_17_cast_fp16)[name = tensor<string, []>("input_299_cast_fp16")];
            tensor<string, []> input_301_pad_type_0 = const()[name = tensor<string, []>("input_301_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_301_pad_0 = const()[name = tensor<string, []>("input_301_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<int32, []> input_301_groups_0 = const()[name = tensor<string, []>("input_301_groups_0"), val = tensor<int32, []>(960)];
            tensor<int32, [2]> input_301_strides_0 = const()[name = tensor<string, []>("input_301_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_301_dilations_0 = const()[name = tensor<string, []>("input_301_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<fp16, [960, 1, 5, 5]> const_86_to_fp16 = const()[name = tensor<string, []>("const_86_to_fp16"), val = tensor<fp16, [960, 1, 5, 5]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4337792)))];
            tensor<fp16, [960]> const_87_to_fp16 = const()[name = tensor<string, []>("const_87_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4385856)))];
            tensor<fp16, [1, 960, 7, 7]> input_303_cast_fp16 = conv(bias = const_87_to_fp16, dilations = input_301_dilations_0, groups = input_301_groups_0, pad = input_301_pad_0, pad_type = input_301_pad_type_0, strides = input_301_strides_0, weight = const_86_to_fp16, x = input_299_cast_fp16)[name = tensor<string, []>("input_303_cast_fp16")];
            tensor<fp16, []> thresholded_relu_18_alpha_0_to_fp16 = const()[name = tensor<string, []>("thresholded_relu_18_alpha_0_to_fp16"), val = tensor<fp16, []>(-0x1.8p+1)];
            tensor<fp16, [1, 960, 7, 7]> thresholded_relu_18_cast_fp16 = thresholded_relu(alpha = thresholded_relu_18_alpha_0_to_fp16, x = input_303_cast_fp16)[name = tensor<string, []>("thresholded_relu_18_cast_fp16")];
            tensor<fp16, []> sigmoid_hard_18_alpha_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_18_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> sigmoid_hard_18_beta_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_18_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 960, 7, 7]> sigmoid_hard_18_cast_fp16 = sigmoid_hard(alpha = sigmoid_hard_18_alpha_0_to_fp16, beta = sigmoid_hard_18_beta_0_to_fp16, x = thresholded_relu_18_cast_fp16)[name = tensor<string, []>("sigmoid_hard_18_cast_fp16")];
            tensor<fp16, [1, 960, 7, 7]> input_305_cast_fp16 = mul(x = thresholded_relu_18_cast_fp16, y = sigmoid_hard_18_cast_fp16)[name = tensor<string, []>("input_305_cast_fp16")];
            tensor<int32, [2]> input_307_axes_0 = const()[name = tensor<string, []>("input_307_axes_0"), val = tensor<int32, [2]>([-2, -1])];
            tensor<bool, []> input_307_keep_dims_0 = const()[name = tensor<string, []>("input_307_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 960, 1, 1]> input_307_cast_fp16 = reduce_mean(axes = input_307_axes_0, keep_dims = input_307_keep_dims_0, x = input_305_cast_fp16)[name = tensor<string, []>("input_307_cast_fp16")];
            tensor<string, []> input_309_pad_type_0 = const()[name = tensor<string, []>("input_309_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_309_strides_0 = const()[name = tensor<string, []>("input_309_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_309_pad_0 = const()[name = tensor<string, []>("input_309_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_309_dilations_0 = const()[name = tensor<string, []>("input_309_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_309_groups_0 = const()[name = tensor<string, []>("input_309_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [240, 960, 1, 1]> features_15_block_2_fc1_weight_to_fp16 = const()[name = tensor<string, []>("features_15_block_2_fc1_weight_to_fp16"), val = tensor<fp16, [240, 960, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4387840)))];
            tensor<fp16, [240]> features_15_block_2_fc1_bias_to_fp16 = const()[name = tensor<string, []>("features_15_block_2_fc1_bias_to_fp16"), val = tensor<fp16, [240]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4848704)))];
            tensor<fp16, [1, 240, 1, 1]> input_309_cast_fp16 = conv(bias = features_15_block_2_fc1_bias_to_fp16, dilations = input_309_dilations_0, groups = input_309_groups_0, pad = input_309_pad_0, pad_type = input_309_pad_type_0, strides = input_309_strides_0, weight = features_15_block_2_fc1_weight_to_fp16, x = input_307_cast_fp16)[name = tensor<string, []>("input_309_cast_fp16")];
            tensor<fp16, [1, 240, 1, 1]> input_311_cast_fp16 = relu(x = input_309_cast_fp16)[name = tensor<string, []>("input_311_cast_fp16")];
            tensor<string, []> input_313_pad_type_0 = const()[name = tensor<string, []>("input_313_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_313_strides_0 = const()[name = tensor<string, []>("input_313_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_313_pad_0 = const()[name = tensor<string, []>("input_313_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_313_dilations_0 = const()[name = tensor<string, []>("input_313_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_313_groups_0 = const()[name = tensor<string, []>("input_313_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [960, 240, 1, 1]> features_15_block_2_fc2_weight_to_fp16 = const()[name = tensor<string, []>("features_15_block_2_fc2_weight_to_fp16"), val = tensor<fp16, [960, 240, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4849280)))];
            tensor<fp16, [960]> features_15_block_2_fc2_bias_to_fp16 = const()[name = tensor<string, []>("features_15_block_2_fc2_bias_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5310144)))];
            tensor<fp16, [1, 960, 1, 1]> input_313_cast_fp16 = conv(bias = features_15_block_2_fc2_bias_to_fp16, dilations = input_313_dilations_0, groups = input_313_groups_0, pad = input_313_pad_0, pad_type = input_313_pad_type_0, strides = input_313_strides_0, weight = features_15_block_2_fc2_weight_to_fp16, x = input_311_cast_fp16)[name = tensor<string, []>("input_313_cast_fp16")];
            tensor<fp16, []> scale_alpha_0_to_fp16 = const()[name = tensor<string, []>("scale_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> scale_beta_0_to_fp16 = const()[name = tensor<string, []>("scale_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 960, 1, 1]> scale_cast_fp16 = sigmoid_hard(alpha = scale_alpha_0_to_fp16, beta = scale_beta_0_to_fp16, x = input_313_cast_fp16)[name = tensor<string, []>("scale_cast_fp16")];
            tensor<fp16, [1, 960, 7, 7]> input_315_cast_fp16 = mul(x = scale_cast_fp16, y = input_305_cast_fp16)[name = tensor<string, []>("input_315_cast_fp16")];
            tensor<string, []> input_317_pad_type_0 = const()[name = tensor<string, []>("input_317_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_317_strides_0 = const()[name = tensor<string, []>("input_317_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_317_pad_0 = const()[name = tensor<string, []>("input_317_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_317_dilations_0 = const()[name = tensor<string, []>("input_317_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_317_groups_0 = const()[name = tensor<string, []>("input_317_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [160, 960, 1, 1]> const_88_to_fp16 = const()[name = tensor<string, []>("const_88_to_fp16"), val = tensor<fp16, [160, 960, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5312128)))];
            tensor<fp16, [160]> const_89_to_fp16 = const()[name = tensor<string, []>("const_89_to_fp16"), val = tensor<fp16, [160]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5619392)))];
            tensor<fp16, [1, 160, 7, 7]> result_cast_fp16 = conv(bias = const_89_to_fp16, dilations = input_317_dilations_0, groups = input_317_groups_0, pad = input_317_pad_0, pad_type = input_317_pad_type_0, strides = input_317_strides_0, weight = const_88_to_fp16, x = input_315_cast_fp16)[name = tensor<string, []>("result_cast_fp16")];
            tensor<fp16, [1, 160, 7, 7]> input_319_cast_fp16 = add(x = result_cast_fp16, y = input_293_cast_fp16)[name = tensor<string, []>("input_319_cast_fp16")];
            tensor<string, []> input_321_pad_type_0 = const()[name = tensor<string, []>("input_321_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_321_strides_0 = const()[name = tensor<string, []>("input_321_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_321_pad_0 = const()[name = tensor<string, []>("input_321_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_321_dilations_0 = const()[name = tensor<string, []>("input_321_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_321_groups_0 = const()[name = tensor<string, []>("input_321_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [960, 160, 1, 1]> const_90_to_fp16 = const()[name = tensor<string, []>("const_90_to_fp16"), val = tensor<fp16, [960, 160, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5619776)))];
            tensor<fp16, [960]> const_91_to_fp16 = const()[name = tensor<string, []>("const_91_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5927040)))];
            tensor<fp16, [1, 960, 7, 7]> input_323_cast_fp16 = conv(bias = const_91_to_fp16, dilations = input_321_dilations_0, groups = input_321_groups_0, pad = input_321_pad_0, pad_type = input_321_pad_type_0, strides = input_321_strides_0, weight = const_90_to_fp16, x = input_319_cast_fp16)[name = tensor<string, []>("input_323_cast_fp16")];
            tensor<fp16, []> thresholded_relu_19_alpha_0_to_fp16 = const()[name = tensor<string, []>("thresholded_relu_19_alpha_0_to_fp16"), val = tensor<fp16, []>(-0x1.8p+1)];
            tensor<fp16, [1, 960, 7, 7]> thresholded_relu_19_cast_fp16 = thresholded_relu(alpha = thresholded_relu_19_alpha_0_to_fp16, x = input_323_cast_fp16)[name = tensor<string, []>("thresholded_relu_19_cast_fp16")];
            tensor<fp16, []> sigmoid_hard_19_alpha_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_19_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> sigmoid_hard_19_beta_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_19_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 960, 7, 7]> sigmoid_hard_19_cast_fp16 = sigmoid_hard(alpha = sigmoid_hard_19_alpha_0_to_fp16, beta = sigmoid_hard_19_beta_0_to_fp16, x = thresholded_relu_19_cast_fp16)[name = tensor<string, []>("sigmoid_hard_19_cast_fp16")];
            tensor<fp16, [1, 960, 7, 7]> input_325_cast_fp16 = mul(x = thresholded_relu_19_cast_fp16, y = sigmoid_hard_19_cast_fp16)[name = tensor<string, []>("input_325_cast_fp16")];
            tensor<int32, [2]> x_axes_0 = const()[name = tensor<string, []>("x_axes_0"), val = tensor<int32, [2]>([-2, -1])];
            tensor<bool, []> x_keep_dims_0 = const()[name = tensor<string, []>("x_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 960, 1, 1]> x_cast_fp16 = reduce_mean(axes = x_axes_0, keep_dims = x_keep_dims_0, x = input_325_cast_fp16)[name = tensor<string, []>("x_cast_fp16")];
            tensor<int32, [2]> concat_0 = const()[name = tensor<string, []>("concat_0"), val = tensor<int32, [2]>([1, 960])];
            tensor<fp16, [1, 960]> input_327_cast_fp16 = reshape(shape = concat_0, x = x_cast_fp16)[name = tensor<string, []>("input_327_cast_fp16")];
            tensor<fp16, [4096, 960]> classifier_0_weight_to_fp16 = const()[name = tensor<string, []>("classifier_0_weight_to_fp16"), val = tensor<fp16, [4096, 960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5929024)))];
            tensor<fp16, [4096]> classifier_0_bias_to_fp16 = const()[name = tensor<string, []>("classifier_0_bias_to_fp16"), val = tensor<fp16, [4096]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13793408)))];
            tensor<fp16, [1, 4096]> linear_0_cast_fp16 = linear(bias = classifier_0_bias_to_fp16, weight = classifier_0_weight_to_fp16, x = input_327_cast_fp16)[name = tensor<string, []>("linear_0_cast_fp16")];
            tensor<fp16, [1, 4096]> input_331_cast_fp16 = relu(x = linear_0_cast_fp16)[name = tensor<string, []>("input_331_cast_fp16")];
            tensor<fp16, [4096, 4096]> classifier_3_weight_to_fp16 = const()[name = tensor<string, []>("classifier_3_weight_to_fp16"), val = tensor<fp16, [4096, 4096]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13801664)))];
            tensor<fp16, [4096]> classifier_3_bias_to_fp16 = const()[name = tensor<string, []>("classifier_3_bias_to_fp16"), val = tensor<fp16, [4096]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(47356160)))];
            tensor<fp16, [1, 4096]> linear_1_cast_fp16 = linear(bias = classifier_3_bias_to_fp16, weight = classifier_3_weight_to_fp16, x = input_331_cast_fp16)[name = tensor<string, []>("linear_1_cast_fp16")];
            tensor<fp16, [1, 4096]> input_337_cast_fp16 = relu(x = linear_1_cast_fp16)[name = tensor<string, []>("input_337_cast_fp16")];
            tensor<fp16, [5, 4096]> classifier_6_weight_to_fp16 = const()[name = tensor<string, []>("classifier_6_weight_to_fp16"), val = tensor<fp16, [5, 4096]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(47364416)))];
            tensor<fp16, [5]> classifier_6_bias_to_fp16 = const()[name = tensor<string, []>("classifier_6_bias_to_fp16"), val = tensor<fp16, [5]>([0x1.398p-9, -0x1.63cp-6, -0x1.15p-6, 0x1.1e8p-5, -0x1.58cp-6])];
            tensor<fp16, [1, 5]> linear_2_cast_fp16 = linear(bias = classifier_6_bias_to_fp16, weight = classifier_6_weight_to_fp16, x = input_337_cast_fp16)[name = tensor<string, []>("linear_2_cast_fp16")];
            tensor<string, []> linear_2_cast_fp16_to_fp32_dtype_0 = const()[name = tensor<string, []>("linear_2_cast_fp16_to_fp32_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<fp32, [1, 5]> output = cast(dtype = linear_2_cast_fp16_to_fp32_dtype_0, x = linear_2_cast_fp16)[name = tensor<string, []>("cast_1")];
        } -> (output);
}